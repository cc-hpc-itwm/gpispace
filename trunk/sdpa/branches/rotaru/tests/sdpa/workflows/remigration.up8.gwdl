<workflow xmlns="http://www.gridworkflow.org/gworkflowdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:schemaLocation="http://www.gridworkflow.org/gworkflowdl http://www.gridworkflow.org/kwfgrid/src/xsd/gworkflowdl_2_0.xsd" ID="No_ID">

    <description>ReMigration, complete workflow to be executed on the aggregator</description>

    <!-- set by master workflow -->
    <place ID="config_file"/>

    <!-- global settings, set by the init function -->
    <place ID="number_of_frequencies"/>
    <place ID="number_of_depthlevels"/>
    <place ID="number_of_parallel_propagators"/>
    <place ID="memhandle_for_temp_outputvolume_update_A"/>
    <place ID="memhandle_for_temp_outputvolume_update_B"/>
    <place ID="memhandle_for_temp_outputvolume_update_C"/>
    <place ID="memhandle_for_temp_outputvolume_update_D"/>
    <place ID="memhandle_for_temp_outputvolume_update_E"/>
    <place ID="memhandle_for_temp_outputvolume_update_F"/>
    <place ID="memhandle_for_temp_outputvolume_update_G"/>
    <place ID="memhandle_for_temp_outputvolume_update_H"/>
    <place ID="memhandle_for_temp_outputvolume_calc"/>
    <place ID="memhandle_for_configuration"/>

    <!-- the seq tokens are for serializing different activities -->
    <place ID="seq_after_init"/>
    <place ID="seq_after_read_input"/>
    <place ID="seq_after_read_velocity"/>
    <place ID="seq_after_calculation"/>
    <place ID="seq_after_prefix_sum"/>
    <place ID="seq_after_write_output"/>
    <place ID="seq_after_finalize"/>

	<!-- slice management -->
    <place ID="slice_before_work"/>
    <place ID="slice_after_work"/>

    <place ID="slices_queued"><token><data><sdpa>0</sdpa></data></token></place>
    <place ID="slices_initialized"><token><data><sdpa>0</sdpa></data></token></place>
    <place ID="slices_finalized"><token><data><sdpa>0</sdpa></data></token></place>

    <place ID="slice_and_depth_before_calc_one_level"/>
    <place ID="slice_and_depth_after_calc_one_level"/>
    <place ID="slice_and_depth_after_update"/>

    <place ID="done"/>

    <!-- init -->

    <transition ID="init">
      <inputPlace placeID="config_file" edgeExpression="config_file"/>

      <outputPlace placeID="number_of_frequencies" edgeExpression="number_of_frequencies"/>
      <outputPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <outputPlace placeID="number_of_parallel_propagators" edgeExpression="number_of_parallel_propagators"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_calc" edgeExpression="memhandle_for_temp_outputvolume_calc"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_A" edgeExpression="memhandle_for_temp_outputvolume_update_A"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_B" edgeExpression="memhandle_for_temp_outputvolume_update_B"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_C" edgeExpression="memhandle_for_temp_outputvolume_update_C"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_D" edgeExpression="memhandle_for_temp_outputvolume_update_D"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_E" edgeExpression="memhandle_for_temp_outputvolume_update_E"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_F" edgeExpression="memhandle_for_temp_outputvolume_update_F"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_G" edgeExpression="memhandle_for_temp_outputvolume_update_G"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_H" edgeExpression="memhandle_for_temp_outputvolume_update_H"/>
      <outputPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <outputPlace placeID="seq_after_init" edgeExpression="seq"/>

      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="init">
          <oc:operationCandidate type="sdpa" operationName="init.init" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="read_input">
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="seq_after_init"/>

      <outputPlace placeID="seq_after_read_input" edgeExpression="seq"/>

      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="readinp">
          <oc:operationCandidate type="sdpa" operationName="readinp.readinp" selected="true"/>
        </oc:operationClass>
      </operation>

    </transition>

    <transition ID="read_velocity">
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="seq_after_read_input"/>

      <outputPlace placeID="seq_after_read_velocity" edgeExpression="seq"/>

      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="readvelo">
          <oc:operationCandidate type="sdpa" operationName="readvelo.readvelo" selected="true"/>
        </oc:operationClass>
      </operation>

    </transition>

    <!-- the split/join pattern -->
    <!-- works without capacities, later use capacities! -->
    <transition ID="initialize_a_slice">
      <readPlace placeID="seq_after_read_velocity"/>
      <readPlace placeID="number_of_frequencies" edgeExpression="number_of_frequencies"/>
      <readPlace placeID="number_of_parallel_propagators" edgeExpression="number_of_parallel_propagators"/>

      <inputPlace placeID="slices_initialized" edgeExpression="slices_initialized"/>
      <inputPlace placeID="slices_queued" edgeExpression="slices_queued"/>

      <outputPlace placeID="slices_initialized" edgeExpression="$slices_initialized + 1"/>
      <outputPlace placeID="slices_queued" edgeExpression="$slices_queued + 1"/>

      <!-- produce a slice -->
      <outputPlace placeID="slice_before_work" edgeExpression="$slices_initialized"/>

      <condition>$slices_initialized &lt; $number_of_frequencies</condition>
      <condition>$slices_queued &lt; $number_of_parallel_propagators</condition>
    </transition>

    <transition ID="all_slices_are_initialized">
      <readPlace placeID="number_of_frequencies" edgeExpression="number_of_frequencies"/>
      <inputPlace placeID="slices_initialized" edgeExpression="slices_initialized"/>

      <condition>$slices_initialized &gt;= $number_of_frequencies</condition>
    </transition>

    <transition ID="finalize_a_slice">
      <readPlace placeID="number_of_frequencies" edgeExpression="number_of_frequencies"/>

      <!-- consume a slice -->
      <inputPlace placeID="slice_after_work" edgeExpression="slice"/>

      <inputPlace placeID="slices_finalized" edgeExpression="slices_finalized"/>
      <inputPlace placeID="slices_queued" edgeExpression="slices_queued"/>

      <outputPlace placeID="slices_queued" edgeExpression="$slices_queued - 1"/>
      <outputPlace placeID="slices_finalized" edgeExpression="$slices_finalized + 1"/>

      <condition>$slices_finalized &lt; $number_of_frequencies</condition>

    </transition>

    <transition ID="all_slices_are_finalized">
      <readPlace placeID="number_of_frequencies" edgeExpression="number_of_frequencies"/>

      <inputPlace placeID="seq_after_read_velocity" edgeExpression="seq"/>
      <inputPlace placeID="slices_finalized" edgeExpression="slices_finalized"/>

      <outputPlace placeID="seq_after_calculation" edgeExpression="$seq"/>

      <condition>$slices_finalized &gt;= $number_of_frequencies</condition>
    </transition>

    <!-- the real work goes here -->
    <transition ID="tag_slice_with_depth_zero">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>

      <inputPlace placeID="slice_before_work" edgeExpression="slice"/>

      <outputPlace placeID="slice_and_depth_before_calc_one_level" edgeExpression="$slice * $number_of_depthlevels"/>
    </transition>

    <transition ID="calc_one_level">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_temp_outputvolume_calc" edgeExpression="memhandle_for_temp_outputvolume"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_before_calc_one_level" edgeExpression="slice_and_depth"/>

      <outputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth_OUT"/>

      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="calc">
          <oc:operationCandidate type="sdpa" operationName="calc.calc" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_A">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_A" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_A" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 0</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_B">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_B" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_B" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 1</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_C">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_C" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_C" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 2</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_D">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_D" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_D" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 3</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_E">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_E" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_E" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 4</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_F">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_F" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_F" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 5</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_G">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_G" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_G" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 6</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="update_H">
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="slice_and_depth_after_calc_one_level" edgeExpression="slice_and_depth"/>

      <!-- exclusive access to the outputvolume -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_H" edgeExpression="memhandle_for_temp_outputvolume"/>

      <outputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth_OUT"/>
      <outputPlace placeID="memhandle_for_temp_outputvolume_update_H" edgeExpression="memhandle_for_temp_outputvolume_OUT"/>
 
      <condition>($slice_and_depth mod 8) = 7</condition>
      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="update">
          <oc:operationCandidate type="sdpa" operationName="update.update" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="prepare_slice_for_next_depthlevel">
      <readPlace placeID="number_of_frequencies" edgeExpression="number_of_frequencies"/>
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>

      <inputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth"/>

      <outputPlace placeID="slice_and_depth_before_calc_one_level" edgeExpression="$slice_and_depth + 1"/>

      <condition>($slice_and_depth mod $number_of_depthlevels) &lt; $number_of_depthlevels - 1</condition>
    </transition>

    <transition ID="finish_calculation_for_a_slice">
      <readPlace placeID="number_of_frequencies" edgeExpression="number_of_frequencies"/>
      <readPlace placeID="number_of_depthlevels" edgeExpression="number_of_depthlevels"/>

      <inputPlace placeID="slice_and_depth_after_update" edgeExpression="slice_and_depth"/>

      <outputPlace placeID="slice_after_work" edgeExpression="$slice_and_depth div $number_of_depthlevels"/>

      <condition>($slice_and_depth mod $number_of_depthlevels) &gt;= $number_of_depthlevels - 1</condition>
    </transition>

    <!-- works done, postprocessing -->
 
    <transition ID="prefix_sum">
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="seq_after_calculation"/>

      <outputPlace placeID="seq_after_prefix_sum" edgeExpression="seq"/>

      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="prefsum">
          <oc:operationCandidate type="sdpa" operationName="prefsum.prefsum" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="write_output">
      <readPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>

      <inputPlace placeID="seq_after_prefix_sum"/>

      <outputPlace placeID="seq_after_write_output" edgeExpression="seq"/>

      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="writeoutp">
          <oc:operationCandidate type="sdpa" operationName="writeoutp.writeoutp" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <transition ID="finalize">
      <inputPlace placeID="seq_after_write_output"/>

      <inputPlace placeID="memhandle_for_configuration" edgeExpression="memhandle_for_configuration"/>
                                                                <!-- rename the first only, ignore the rest -->
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_A" edgeExpression="memhandle_for_temp_outputvolume" />
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_B" edgeExpression="memhandle_for_temp_outputvolume_B" />
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_C" edgeExpression="memhandle_for_temp_outputvolume_C" />
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_D" edgeExpression="memhandle_for_temp_outputvolume_D" />
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_E" edgeExpression="memhandle_for_temp_outputvolume_E" />
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_F" edgeExpression="memhandle_for_temp_outputvolume_F" />
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_G" edgeExpression="memhandle_for_temp_outputvolume_G" />
      <inputPlace placeID="memhandle_for_temp_outputvolume_update_H" edgeExpression="memhandle_for_temp_outputvolume_H" />

      <!-- consume all the global variable tokens, not strictly necessary -->
      <inputPlace placeID="number_of_frequencies"/>
      <inputPlace placeID="number_of_depthlevels"/>
      <inputPlace placeID="number_of_parallel_propagators"/>
      <inputPlace placeID="memhandle_for_temp_outputvolume_calc"/>

      <outputPlace placeID="seq_after_finalize" edgeExpression="seq"/>

      <operation>
        <oc:operationClass xmlns:oc="http://www.gridworkflow.org/gworkflowdl/operationclass" name="finalize">
          <oc:operationCandidate type="sdpa" operationName="finalize.finalize" selected="true"/>
        </oc:operationClass>
      </operation>
    </transition>

    <!-- give control back to master workflow -->
    <transition ID="computation_done">
      <inputPlace placeID="seq_after_finalize" edgeExpression="seq"/>

      <outputPlace placeID="done" edgeExpression="$seq"/>
    </transition>

</workflow>
