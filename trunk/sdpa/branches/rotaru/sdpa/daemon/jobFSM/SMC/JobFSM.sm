%{
  // Finite state machine of the SDPA protocol
  //
%}

%include <string.h>
%package sdpa::fsm::smc
%class JobFSM
%header JobFSM.hpp

%start SDPA::Pending
%map SDPA

%%
Pending
{
    Dispatch()
        Running
        {
        	action_run_job(); 
        }

    CancelJob(pEvent: const sdpa::events::CancelJobEvent*)
        Cancelled
        {
           action_cancel_job_from_pending(*pEvent); 
        }

    QueryJobStatus(pEvent: const sdpa::events::QueryJobStatusEvent*)
        nil
        {
            action_query_job_status(*pEvent);
        }
}

Running
{
    JobFinished(pEvent: const sdpa::events::JobFinishedEvent*)
      	Finished
        {
        	action_job_finished(*pEvent);
        }
      
  	JobFailed(pEvent: const sdpa::events::JobFailedEvent*)
    	Failed
        {
            action_job_failed(*pEvent);
        }
        
    CancelJob(pEvent: const sdpa::events::CancelJobEvent*)
        Cancelling
        {
			action_cancel_job(*pEvent);
        }
        
	CancelJobAck(pEvent: const sdpa::events::CancelJobAckEvent*)
    	Cancelled
    	{
    		//action_cancel_job_ack(*pEvent);
    	}

    QueryJobStatus(pEvent: const sdpa::events::QueryJobStatusEvent*)
        nil
        {
            action_query_job_status(*pEvent);
        }
}

Cancelling
{
    CancelJobAck(pEvent: const sdpa::events::CancelJobAckEvent*)
    	Cancelled
    	{
    		action_cancel_job_ack(*pEvent);
    	}
    	
    JobFinished(pEvent: const sdpa::events::JobFinishedEvent*)
      	Finished
        {
        	action_job_finished(*pEvent);
        }
      
  	JobFailed(pEvent: const sdpa::events::JobFailedEvent*)
    	Failed
        {
            action_job_failed(*pEvent);
        }
        	
    	
	QueryJobStatus(pEvent: const sdpa::events::QueryJobStatusEvent*)
        nil
        {
        	action_query_job_status(*pEvent); 
        }
}

Finished
{
    QueryJobStatus(pEvent: const sdpa::events::QueryJobStatusEvent*)
        nil
        {
        	action_query_job_status(*pEvent); 
        }
        
    
    DeleteJob(pEvent: const sdpa::events::DeleteJobEvent*)
        nil
        {
        	action_delete_job(*pEvent); 
        }
        
	RetrieveJobResults(pEvent: const sdpa::events::RetrieveJobResultsEvent*)
        nil
        {
        	action_retrieve_job_results(*pEvent); 
        }        
}

Failed
{
    QueryJobStatus(pEvent: const sdpa::events::QueryJobStatusEvent*)
        nil
        {
        	action_query_job_status(*pEvent); 
        }
        
	DeleteJob(pEvent: const sdpa::events::DeleteJobEvent*)
        nil
        {
        	action_delete_job(*pEvent); 
        }
                
    RetrieveJobResults(pEvent: const sdpa::events::RetrieveJobResultsEvent*)
        nil
        {
        	action_retrieve_job_results(*pEvent); 
        }       
}

Cancelled
{
	Default()
    	nil
    	{
    		//action_cancel_job_ack(*pEvent);
    	}
        
	DeleteJob(pEvent: const sdpa::events::DeleteJobEvent*)
        nil
        {
        	action_delete_job(*pEvent); 
        }
        
    QueryJobStatus(pEvent: const sdpa::events::QueryJobStatusEvent*)
        nil
        {
        	action_query_job_status(*pEvent); 
        }
        
    RetrieveJobResults(pEvent: const sdpa::events::RetrieveJobResultsEvent*)
		nil
		{
			action_retrieve_job_results(*pEvent); 
		}       
}

%%
