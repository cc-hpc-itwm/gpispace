%{
  // Finite state machine of the SDPA protocol
  //
%}

%include <cstring>
%package sdpa::fsm
%class JobFSM
%header JobFSM.hpp

%start SMC_JobFSM::Pending
%map SMC_JobFSM

%%
Pending
{
    RunJob(event: sdpa::events::RunJobEvent&)
        Running
        {
        	action_dispatch(event); 
        }

    CancelJob(event: sdpa::events::CancelJobEvent&)
        Cancelled
        {
           action_cancel(event); 
        }

    QueryJobStatus(event: sdpa::events::QueryJobStatusEvent&)
        Pending
        {
            action_query_status(event);
        }
}

Running
{
    JobFinished(event: sdpa::events::JobFinishedEvent&)
      	Running
        {
        	action_job_finished(event);
        }
      
  	JobFailed(event: sdpa::events::JobFailedEvent&)
    	Failed
        {
            action_job_failed(event);
        }
        
    CancelJob(event: sdpa::events::CancelJobEvent&)
        Cancelling
        {
			action_cancel(event);
        }

    QueryJobStatus(event: sdpa::events::QueryJobStatusEvent&)
        Running
        {
            action_query_status(event);
        }
}

Cancelling
{
    CancelJobAck(event: sdpa::events::CancelJobAckEvent&)
    	Cancelled
    	{
    		action_cancel_ack(event);
    	}
    	
	QueryJobStatus(event: sdpa::events::QueryJobStatusEvent&)
        Cancelling
        {
        	action_query_status(event); 
        }
}

Finished
{
    QueryJobStatus(event: sdpa::events::QueryJobStatusEvent&)
        Finished
        {
        	action_query_status(event); 
        }
        
	RetriveResultsEvent(event: sdpa::events::RetriveResultsEvent&)
        Finished
        {
        	action_retrieve_results(event); 
        }        
}

Failed
{
    QueryJobStatus(event: sdpa::events::QueryJobStatusEvent&)
        Failed
        {
        	action_query_status(event); 
        }
}

Cancelled
{
    QueryJobStatus(event: sdpa::events::QueryJobStatusEvent&)
        Cancelled
        {
        	action_query_status(event); 
        }
}

%%
