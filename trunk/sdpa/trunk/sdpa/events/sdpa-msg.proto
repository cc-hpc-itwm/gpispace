package sdpa.events;
option optimize_for = SPEED;

message SDPAMessage {
  required bytes message_id = 1;

  // common message types
  optional Error     error = 2;

  optional SubmitJob submit_job = 3;
  optional SubmitJobAck submit_job_ack = 4;

  optional CancelJob cancel_job = 5;
  optional CancelJobAck cancel_job_ack = 6;

  optional QueryStatus query_status = 7;
  optional StatusReply status_reply = 8;

  optional RetrieveResults retrieve_results = 9;
  optional Results results = 10;

  optional DeleteJob delete_job = 11;
  optional DeleteJobAck delete_job_ack = 12;

  optional Request request = 13;

  optional JobFinished job_finished = 15;
  optional JobFinishedAck job_finished_ack = 16;
  optional JobFailed   job_failed = 17;
  optional JobFailedAck job_failed_ack = 18;

  optional LifeSignal life_signal = 19;

  optional ConfigRequest config_request = 20;
  optional ConfigReply   config_reply = 21;
}

enum ErrorCode {
  OK = 0;
  NO_ACTIVITY = 500;
}

enum JobState {
  UNKNOWN = 0;
  PENDING = 1;
  RUNNING = 2;
  FINISHED = 3;
  FAILED = 4;
  CANCELLED = 5;
  CANCELLING = 6;
}

message Error {
  required ErrorCode error_code = 1;
  required string error_description = 2;
}

message Task {
  required bytes workflow = 2;
  repeated Token input = 3;
}

message FunctionCall {
  required string module = 1;
  required string method = 2;
  repeated Token input = 3;
  repeated Token output = 4;
}

message Activity {
  required bytes id = 1;
  optional Task task = 2;
  optional FunctionCall function = 3;
}

message Token {
  required bytes place = 1;
  required bytes token = 2;
}

message Properties {
  message Property {
    required string key = 1;
    required string val = 2;
  }
  repeated Property property = 1;
}

message SubmitJob {
  required bytes workflow = 1;
  repeated Token input = 2;
}
message SubmitJobAck {
  required bytes id = 1;
}

message CancelJob {
  required bytes id = 1;
  optional string reason = 2;
}
message CancelJobAck {
  required bytes id = 1;
}

message QueryStatus {
  required bytes id = 1;
}

message StatusReply {
  required bytes id = 1;
  required JobState state = 2;
  optional Properties properties = 3;
}

message RetrieveResults {
  required bytes id = 1;
}
message Results {
  required bytes id = 1;
  required int32 exit_code = 2;
  repeated Token output_token = 3;
}

message DeleteJob {
  required bytes id = 1;
}
message DeleteJobAck {
  required bytes id = 1;
}

message Request {
  required int32 queue_length = 1;
}

message JobFinished {
  required bytes id = 1;
  repeated Token output = 2;
}
message JobFinishedAck {
  required bytes id = 1;
}
message JobFailed {
  required bytes id = 1;
}
message JobFailedAck {
  required bytes id = 1;
}
message LifeSignal {
  required fixed64 timestamp = 1;
  required bytes component_id = 2;
  required bytes last_job_id = 3;
}

message ConfigRequest {
  required bytes component_id = 1;
}
message ConfigReply {
  required bytes component_id = 1;
  required Config config = 2;
}
message Config {
  optional Properties properties = 2;
}
