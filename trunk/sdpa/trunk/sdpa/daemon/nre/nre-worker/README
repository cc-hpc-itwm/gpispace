To check whether a module has all its dependencies loaded, try the following:

  LD_BIND_NOW="yes" ./build/nre-worker/nre_worker 127.0.0.1:5005 etc/fvm.cfg.example ./build/mods/libmod-b.so ./build/mods/libmod-a.so

This fails immediately with:

  could not load module: ./build/mods/libmod-b.so: undefined symbol: fun_a

The usual error message in this case will be a bit confusing:

  ./build/nre-worker/nre_worker 127.0.0.1:5005 etc/fvm.cfg.example ./build/mods/libmod-b.so ./build/mods/libmod-a.so

  running RunTest example
  fun_b(42)
  ./build/nre-worker/nre_worker: symbol lookup error: ./build/mods/libmod-b.so: undefined symbol: fun_a

That means, the program fails somewhen during its life-time when  it  encounters
an undefined function  call.   To  enforce  the  first  behaviour  compile  with
SDPA_MODULE_LOADER_BIND_NOW  (or  use   the   environment   variable   version).

The correct order for executing this example is:

  ./build/nre-worker/nre_worker 127.0.0.1:5005 etc/fvm.cfg.example ./build/mods/libmod-a.so ./build/mods/libmod-b.so 

  running RunTest example
  fun_b(42)
  fun_a(42)

