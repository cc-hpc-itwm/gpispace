%{
  // Finite state machine of the SDPA protocol
  //
#if __GNUC__ >4 || ( __GNUC__==4 && __GNUC_MINOR__ > 1)
#  pragma GCC diagnostic ignored "-Wall"
#  pragma GCC diagnostic ignored "-Wunused"
#  pragma GCC diagnostic ignored "-Weffc++"
#  pragma GCC diagnostic ignored "-Wunused-parameter"
#endif 
%}

%include <string.h>
%package sdpa::fsm::smc
%class DaemonFSM
%header DaemonFSM.hpp

%start SMC_DaemonFSM::Down
%map SMC_DaemonFSM

%%
Down
{
    StartUp(event: const sdpa::events::StartUpEvent&)
        Configuring
        {
        	action_configure(event); 
        }
	Error(event: const sdpa::events::ErrorEvent&)
	  nil
	  {}
}

Configuring
{
    ConfigOk(event: const sdpa::events::ConfigOkEvent&)
        Up
        {
        	action_config_ok(event); 
        }
        
	ConfigNok(event: const sdpa::events::ConfigNokEvent&)
        Down
        {
        	action_config_nok(event); 
        }

	Error(event: const sdpa::events::ErrorEvent&)
	  nil
	  {}
}

Up
{
	Interrupt(event: const sdpa::events::InterruptEvent& )
	Down
	{
		action_interrupt(event);
	}
	
	RegisterWorker(event: const sdpa::events::WorkerRegistrationEvent& )
	nil
	{
		action_register_worker(event);
	}
	
	//event sent from the upper level
	DeleteJob(event: const sdpa::events::DeleteJobEvent& )
	nil
	{
		action_delete_job(event);
	}
	
	//event sent from the lower level
	SubmitJob(event: const sdpa::events::SubmitJobEvent& )
	nil
	{
		action_submit_job(event);
	}
		
	//event sent from the lower level
	LifeSign(event: const sdpa::events::LifeSignEvent& )
	nil
	{
		action_lifesign(event);
	}
		
	//event sent from the lower level
	RequestJob(event: const sdpa::events::RequestJobEvent& )
	nil
	{
		action_request_job(event);
	}
	
	//event sent from the lower level
	ConfigRequest(event: const sdpa::events::ConfigRequestEvent& )
	nil
	{
		action_config_request(event);
	}

	Error(event: const sdpa::events::ErrorEvent&)
	nil
	{
		action_error_event(event);
	}
}
%%
