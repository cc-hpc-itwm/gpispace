#!/bin/bash

test -r "$HOME/.sdpa/state/sdpa.env" && source "$HOME/.sdpa/state/sdpa.env"

# set some default values
gui="$SDPA_GUI"
if [ -z "$gui" ]
then
  gui="$( hostname -s ):9001"
fi

debug=false
daemonize=false
listen="`hostname`"
name="nre-`hostname -s`"
parent="aggregator"
worker="127.0.0.1:8000"
logfile="$SDPA_LOG_DIR/pc.`hostname -s`.log"

function usage ()
{
    cat >&2 <<EOF
usage: $0 [options]

    -h: print this help
    -m ip:port (=$gui): monitor address
    -l ip:port (=$bind_addr): address to bind to
    -p parent (=$parent): parent to connect to
    -n name (=$name): name of this nre
    -w worker (=$worker): worker url
    -D daemonize
    -L logfile (=$logfile)
EOF
}

while getopts ":hm:l:p:n:w:DL:" opt; do
    case $opt in
	h)
	    usage
	    exit 0
	    ;;
	m)
	    gui=$OPTARG
	    ;;
	l)
	    bind_addr=$OPTARG
	    ;;
	p)
	    parent=$OPTARG
	    ;;
	n)
	    name=$OPTARG
	    ;;
	w)
	    worker=$OPTARG
	    ;;
	D)
	    daemonize=true
	    ;;
	L)
	    logfile="$OPTARG"
	    ;;
	\?)
	    echo "invalid option: -$OPTARG" >&2
	    echo "try: $0 -h" >&2
	    exit 1
	    ;;
    esac
done

bin="$(which nre)"
if [ ! -x "$bin" ] ; then
  log "# nre binary could not be found in the path!"
  exit 1
fi

args="$args --name=$name"
args="$args --url=$listen"
args="$args --worker_url=$worker"
args="$args --master=$parent"
args="$args --gui_url=$gui"
args="$args --kvs_url=$KVS_URL"

cmd="$bin $args"

log "Running $cmd on node $hostname"
export FHGLOG_to_file="$logfile"
if [ "$daemonize" == "true" ] ; then
    $cmd </dev/null >/dev/null 2>&1 &
else
    exec $cmd
fi
