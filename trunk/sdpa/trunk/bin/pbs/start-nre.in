#!/bin/bash
test -r ~/.init-screen.env && source ~/.init-screen.env

# set some default values
gui_url="$SDPA_GUI"
if [ -z "$gui_url" ]
then
  gui_url="$( hostname -s ):9001"
fi

gpi_cfg="@GPI_CONFIG_PATH@"
if [ -n "$SDPA_GPI_CFG" -a -r "$SDPA_GPI_CFG" ] ; then
  gpi_cfg="$SDPA_GPI_CFG"
elif [ -r "$HOME/.sdpa/configs/gpi.rc" ] ; then
  gpi_cfg="$HOME/.sdpa/configs/gpi.rc"
elif [ -n "$SDPA_GPI_CFG" -a -r "$SDPA_HOME/etc/gpi/sdpa-gpi.cfg" ] ; then
  gpi_cfg="$SDPA_HOME/etc/gpi/sdpa-gpi.cfg"
fi

debug=false
bind_addr="`hostname`"
name="nre-`hostname -s`"
parent="aggregator"
rank=0

function usage ()
{
    cat >&2 <<EOF
usage: $0 [options]

    -h: print this help
    -r rank (=$rank): set the rank of this nre
    -c gpi-cfg (=$gpi_cfg): path to the gpi cfg
    -m ip:port: monitor address
    -l address (=$bind_addr): address to bind to
    -p parent (=$parent): parent to connect to
EOF
}

while getopts ":hr:n:c:m:l:p:" opt; do
    case $opt in
	r)
	    rank=$OPTARG
	    ;;
	n)
	    name=$OPTARG
	    ;;
	c)
	    gpi_cfg=$OPTARG
	    ;;
	m)
	    gui_url=$OPTARG
	    ;;
	l)
	    bind_addr=$OPTARG
	    ;;
	p)
	    parent=$OPTARG
	    ;;
	h)
	    usage
	    exit 0
	    ;;
	\?)
	    echo "invalid option: -$OPTARG" >&2
	    echo "try: $0 -h" >&2
	    exit 1
	    ;;
    esac
done

if [ ! -r "$gpi_cfg" ] ; then
  cat >&2 <<EOF
# could not figure out, which config file to use!
#    the following might help:
#
#       set SDPA_GPI_CFG (current: $SDPA_GPI_CFG)
#       create \$HOME/.sdpa/configs/gpi.rc
#       create \$SDPA_HOME/etc/gpi/sdpa-gpi.cfg
EOF
  exit 1
else
  log "# Using config file in: $gpi_cfg"
fi

# sanity checks
if [ -z "$SDPA_LOG_DIR" ] ; then
  log "# SDPA_LOG_DIR is not set!"
  exit 1
fi

if [ ! -d "$SDPA_LOG_DIR" ] ; then
    log "# creating log directory: $SDPA_LOG_DIR"
    mkdir -p "$SDPA_LOG_DIR"
fi

if [ ! -w "$SDPA_LOG_DIR" ] ; then
  log "# SDPA_LOG_DIR=\"$SDPA_LOG_DIR\" is not writable!"
  exit 1
fi

while read k v; do
    case "$k" in
	SHMSZ)
	    log "using shmsz $v"
	    export FVM_PC_SHMSZ="$v"
	    ;;
	FVMSZ)
	    log "using fvmsz $v"
	    export FVM_PC_FVMSZ="$v"
	    ;;
	MSQFILE)
	    log "using msq $v"
	    export FVM_PC_MSQ="$v"
	    ;;
	SHMFILE)
	    log "using shm $v"
	    export FVM_PC_SHM="$v"
	    ;;
    esac
done < "$gpi_cfg"

log "killing process-container..."
killall nre-pcd >/dev/null 2>&1
sleep 1
log "killing old nre..."
killall nre >/dev/null 2>&1
sleep 1

log "Running $name with rank $rank at $bind_addr with parent $parent"
LD_LIBRARY_PATH=${PC_LIBRARY_PATH}:${LD_LIBRARY_PATH} \
FHGLOG_to_file="$SDPA_LOG_DIR/pc.`hostname -s`.log" nre-pcd \
    --rank "$rank" \
    --load "$SDPA_LIBEXEC/libfvm-pc.so" \
    --load "$SDPA_LIBEXEC/libsinc.so" \
    -a "$SDPA_LIBEXEC" </dev/null >/dev/null 2>&1 &

sleep 1

FHGLOG_to_file="$SDPA_LOG_DIR/nre.`hostname -s`.log" nre \
    --url "${bind_addr}" \
    --name "${name}" \
    --gui_url="$gui_url" \
    --agg_name="$parent" </dev/null >/dev/null 2>&1 &
