#!/bin/bash

test -r ~/.init-screen.env && source ~/.init-screen.env

run_local_only=false

while getopts ":hl" opt; do
    case $opt in
	l)
	    run_local_only=true
	    ;;
	h)
	    echo "usage: $0 [-h] [-l]" >&2
	    echo "    -h : print this help" >&2
	    echo "    -l : run only locally" >&2
	    exit 0
	    ;;
	\?)
	    echo "Invalid option: -$OPTARG" >&2
	    exit 1
    esac
done

function kill_processes ()
{
    for name in fvm_sdpa_standalone sdpa-gpi; do
	pid=$(pidof $name)
	if [ -n "$pid" ] ; then
	    echo -n "killing $name ($pid)..."
	    kill -TERM $pid
	    if [ $? -ne 0 ] ; then
		echo "FAILED"
	    else
		echo "DONE"
	    fi
	fi
    done
}

function remove_ipcs ()
{
    for ipc_type in q s m; do
	output=$( ipcs -${ipc_type} -c | tail -n +4 | head -n -1 )
	while [ -n "$output" ]; do
	    read id mode user group user group output <<<$output
	    if [ "$user" == "$USER" ] ; then
		echo "removing ipc-id $id type $ipc_type"
		ipcrm -${ipc_type} $id
	    fi
	done
    done
}

function ipc_cleanup ()
{
    kill_processes
    remove_ipcs
}

function node_loop ()
{
    node_max=$( uniq $SDPA_NODEFILE | wc -l )
    nodes=$( echo $( seq 1 $node_max ) )
    bunch_size=16
    count=0

    for node_num in $nodes; do
	count=$(( count + 1 ))
	node_name=$( uniq $SDPA_NODEFILE | tail -n +$node_num | head -n 1 )
	log "clearing ipc on $node_name..."
	echo ipc-cleanup -l | ssh -x $node_name >/dev/null 2>&1 &
	if [ $count -ge $bunch_size ] ; then
	    wait
	    count=0
	fi
    done
    wait
}

if [ "$run_local_only" == "true" ] ; then
    ipc_cleanup
else
    if [ ! -r "$SDPA_NODEFILE" ] ; then
	echo "Cannot read nodefile: $SDPA_NODEFILE" >&2
	exit 1
    fi
    node_loop
fi
