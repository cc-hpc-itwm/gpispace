<?xml version="1.0" encoding="UTF-8"?>
<defun name="struct">

<in name="in" type="control"/>
<out name="out" type="control"/>

<net>

<place name="place_string" type="string">
<token><value>"a_string"</value></token>
</place>
<!-- duplicate place
<place name="place_string" type="string">
<token><value>"a_string"</value></token>
</place>
-->
<place name="place_long" type="long">
<token><value>42</value></token>
</place>
<place name="place_double" type="double">
<token><value>47.11e-23</value></token>
</place>
<place name="place_control" type="control">
<token><value>[]</value></token>
</place>
<place name="place_control2" type="control">
<token><value>[]</value></token>
<token><value>[]</value></token>
</place>
<place name="place_char" type="char">
<token><value>'c'</value></token>
</place>
<place name="place_bitset" type="bitset">
<token><value>{12}</value></token>
</place>
<place name="place_bool" type="bool">
<token><value>true</value></token>
</place>

<struct name="bi">
  <field name="a" type="pixel"/>
  <field name="b" type="pixel"/>
</struct>

<struct name="pixel">
  <struct name="point">
   <field name="x" type="long"/>
   <field name="y" type="long"/>
   <struct name="jitter">
     <field name="a" type="double"/>
     <field name="r" type="double"/>
   </struct>
  </struct>
  <field name="color" type="long"/>
  <field name="pyx" type="pyxel"/>
</struct>

<struct name="pyxel">
  <struct name="point">
   <field name="x" type="long"/>
   <field name="y" type="long"/>
  </struct>
</struct>

<struct name="no_fields"/>

<place name="place_no_fields" type="no_fields">
<token/>
</place>

<place name="place_pixel" type="pixel" capacity="2">
<token>
  <field name="color"><value>0xeeeeee</value></field>
  <field name="point">
    <field name="x"><value>23</value></field>
    <field name="y"/>
    <field name="jitter"/>
  </field>
</token>
<token>
  <field name="color"><value>0xeeeeee</value></field>
  <field name="point">
    <field name="z"><value>23.4</value></field>
    <field name="y"/>
    <field name="jitter"/>
  </field>
</token>
<token/>
<!-- type mismatch: expecting literal, got structured
<token>
  <field name="color">
    <field name="upps"/>
  </field>
</token>
-->
<!-- type mismatch: expecting struct, got literal
<token>
  <field name="point"><value></value></field>
</token>
-->
</place>

</net>
</defun>
