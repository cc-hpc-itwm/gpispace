<defun name="sequence">

  <in name="amount" type="long" place="N"/>
  <out name="out" type="long" place="xs"/>

  <net>
    <place name="N" type="long"/>
    <place name="xs" type="long"/>
    <place name="i" type="long"/>
    <place name="m" type="long"/>

    <transition name="init">
      <defun>
        <in name="N" type="long"/>
        <out name="i" type="long"/>
        <out name="m" type="long"/>
        <expression>
          ${i} := 0L;
          ${m} := ${N};
        </expression>
      </defun>
      <connect-in place="N" port="N"/>
      <connect-out port="m" place="m"/>
      <connect-out port="i" place="i"/>
    </transition>

    <transition name="break">
      <defun>
        <in name="i" type="long"/>
        <in name="m" type="long"/>
        <expression></expression>
        <condition>${i} :ge: ${m}</condition>
      </defun>
      <connect-in place="i" port="i"/>
      <connect-in place="m" port="m"/>
    </transition>

    <transition name="step">
      <defun>
        <in name="i" type="long"/>
        <in name="m" type="long"/>
        <out name="i" type="long"/>
        <out name="x" type="long"/>
        <expression>
          ${x} := ${i}; ${i} := ${i} + 1
        </expression>
        <condition>${i} :lt: ${m}</condition>
      </defun>
      <connect-in place="i" port="i"/>
      <connect-read place="m" port="m"/>
      <connect-out place="i" port="i"/>
      <connect-out place="xs" port="x"/>
    </transition>
  </net>
</defun>
