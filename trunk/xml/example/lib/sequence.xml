<defun name="sequence">

<in name="amount" type="long" place="amount"/>
<out name="out" type="long" place="out"/>

<net>
  <struct name="COUNTER">
    <field name="i" type="long"/>
    <field name="max" type="long"/>
  </struct>

  <place name="amount" type="long"/>
  <place name="out" type="long"/>
  <place name="counter" type="COUNTER"/>

  <transition name="init">
    <defun name="f_init">
      <in name="N" type="long"/>
      <out name="counter" type="COUNTER"/>
      <expression>
        ${counter.i} := 0L;
        ${counter.max} := ${N};
      </expression>
    </defun>
    <connect-in place="amount" port="N"/>
    <connect-out port="counter" place="counter"/>
  </transition>

  <transition name="break">
    <defun name="f_break">
      <in name="counter" type="COUNTER"/>
      <expression></expression>
      <condition>${counter.i} :gt: ${counter.max}</condition>
    </defun>
    <connect-in place="counter" port="counter" />
  </transition>

  <transition name="step">
    <defun name="f_step">
      <in name="counter" type="COUNTER" />
      <out name="counter" type="COUNTER" />
      <out name="out" type="long" />
      <expression>
        ${out} := ${counter.i};
        ${counter.i} := ${counter.i} + 1;
      </expression>
      <condition>${counter.i} :lt: ${counter.max}</condition>
    </defun>
    <connect-in place="counter" port="counter" />
    <connect-out place="counter" port="counter" />
    <connect-out place="out" port="out" />
  </transition>
</net>
</defun>
