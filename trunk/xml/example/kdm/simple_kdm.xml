<?xml version="1.0" encoding="UTF-8"?>
<defun name="kdm_simple" internal="false"
			 xsi:noNamespaceSchemaLocation="../../xsd/pnet.xsd"  
                         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                         xmlns:xi="http://www.w3.org/2001/XInclude">
	<in name="config_file" type="STRING" place="config_file"/>
	<out name="done" type="CONTROL" place="done"/>
	<net>
	    <typedef name="LONG"/>
		<typedef name="STRING"/>
		<place name="config_file" type="STRING">
			<token type="STRING">
				<value>/tmp/test.cfg</value>
			</token>
		</place>
		<typedef name="CONTROL"/>
		
		<typedef name="CONFIG">
			<field name="OFFSETS" type="LONG" />
			<field name="SUBVOLUMES_PER_OFFSET" type="LONG" />
			<field name="BUNCHES_PER_OFFSET" type="LONG" />
			<field name="handle_Job" type="LONG" />
			<field name="handle_TT" type="LONG" />
			<field name="NThreads" type="LONG" />
		</typedef>

		<typedef name="VOLUME">
			<field name="id" type="LONG"/>
			<field name="offset" type="LONG"/>
		</typedef>
		
		<typedef name="BUNCH">
			<field name="id" type="LONG"/>
			<field name="volume" type="VOLUME"/>
		</typedef>
		
		<transition name="initialize">
			<defun>
				<in name="config_file" type="STRING" />
				<out name="config" type="CONFIG" />
				<out name="wait" type="LONG" />
				<out name="trigger" type="CONTROL" />
				<module name="kdm" function="initialize"/>
			</defun>

			<connect-in place="config_file" port="config_file" />
			<connect-out port="config" place="config" />
			<connect-out port="trigger" place="trigger_loadTT" />
			<connect-out port="wait" place="wait" />
		</transition>
		
        <place name="config" type="CONFIG"/>
        <place name="wait" type="LONG"/>
        <place name="trigger_loadTT" type="CONTROL" />
        
		<defun name="f_loadTT">
			<in name="config" type="CONFIG"/>
			<in name="trigger" type="CONTROL"/>
			<out name="trigger" type="CONTROL"/>
			
			<module name="kdm" function="loadTT"/>
		</defun>
		
		<transition name="loadTT" use="f_loadTT">
			<connect-read place="config" port="config" />
			<connect-in place="trigger_loadTT" port="trigger" />
			<connect-out port="trigger" place="trigger_generate" />
		</transition>
		<place name="trigger_generate" type="CONTROL" />

		<transition name="duplicate_trigger_generate_offsets">
			<defun>
				<in name="value" type="CONTROL" />
				<out name="one" type="CONTROL" />
				<out name="two" type="CONTROL" />
				<expression>
					${one} := ${value};
					${two} := ${value};
				</expression>
			</defun>
			<connect-in place="trigger_generate" port="value" />
			<connect-out port="one" place="trigger_extract_offsets" />
			<connect-out port="two" place="trigger_extract_volumes" />
		</transition>
		<place name="trigger_extract_offsets" type="CONTROL" />
		<place name="trigger_extract_volumes" type="CONTROL" />

		<transition name="extract_offsets">
			<defun>
				<in name="config" type="CONFIG" />
				<in name="trigger" type="CONTROL" />
				<out name="offsets" type="LONG" />
				<expression>
					${offsets} := ${config.OFFSETS}
				</expression>
			</defun>
			<connect-read place="config" port="config" />
			<connect-in   place="trigger_extract_offsets" port="trigger" />
			<connect-out  port="offsets" place="number_of_offsets" />			
		</transition>
		<place name="number_of_offsets" type="LONG" />
		        
		<transition name="extract_number_of_volumes">
			<defun>
				<in name="config" type="CONFIG" />
				<in name="trigger" type="CONTROL" />
				<out name="volumes" type="LONG" />
				<expression>
					${volumes} := ${config.SUBVOLUMES_PER_OFFSET};
				</expression>
			</defun>
			<connect-read place="config" port="config" />
			<connect-in place="trigger_generate_volumes" port="trigger" />
			<connect-out port="volumes" place="number_of_volumes" />			
		</transition>
		<place name="number_of_volumes" type="LONG" />

        <transition name="generate_offset">
			<xi:include href="generate_sequence.xml" />
			<connect-in place="number_of_offsets" port="amount" />
			<connect-out place="offset" port="out" />
		</transition>
        <place name="offset" type="LONG" />
		
        <transition name="generate_volume">
			<xi:include href="generate_volume.xml" />
			<connect-in place="offset" port="offset" />
			<connect-read place="number_of_volumes" port="amount" />
			<connect-out place="volume" port="out" />
		</transition>
		
		<!--  check if thia type is defined!!!! -->
		<place name="volume" type="VOLUME" />		

		<!-- wrap process volume so that it will be executed on the nre-pcd -->
		<transition name="process_volume">
			<defun internal="false">
				<in name="volume" type="VOLUME"  place="volume"/>
				<in name="config" type="CONFIG"  place="config"/>
				<out name="done"  type="CONTROL" place="done"/>
				<net>
					<place name="volume" type="VOLUME" />
      				<place name="config" type="CONFIG" />
      				<place name="done" type="CONTROL" />
					
					<transition name="wrap_process_volume">
						<xi:include href="process_volume.xml" /> 
						<connect-in   place="volume" port="volume" />
						<connect-read place="config" port="config" />
						<connect-out  place="done"   port="done" />
					</transition>
				</net>
				
			</defun>
			<connect-in place="volume" port="volume" />
			<connect-read place="config" port="config" />
			<connect-out place="trigger_dec" port="done" />
		</transition>
		<place name="trigger_dec" type="CONTROL" />		
		
		<transition name="dec">
			<defun name="f_dec">
				<in	name="trigger" type="CONTROL" />
				<in name="wait" type="LONG" />
				<out name="wait" type="LONG" />
				<expression>
					${wait} := ${wait} - 1;
				</expression>
			</defun>
			<connect-in place="trigger_dec" port="trigger" />
			<connect-in place="wait" port="wait" />
			<connect-out place="wait" port="wait" />
		</transition>
		
		<transition name="finalize">
			<defun name="f_finalize" internal="false">
				<in	name="wait" type="LONG" />
				<in	name="config" type="CONFIG" />
				<out name="trigger" type="CONTROL" />
				<module name="kdm" function="finalize"/>
				<condition> ${wait} == 0L </condition>
			</defun>
			<connect-in place="wait" port="wait" />
			<connect-in place="config" port="config" />
			<connect-out place="done" port="trigger" />
		</transition>
	</net>
</defun>
