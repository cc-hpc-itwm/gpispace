<defun name="join_exp">
  <in name="l" type="long" place="in_A_1"/>
  <in name="d" type="long" place="in_A_2"/>
  <out name="d" type="long" place="d"/>

  <net>

  <struct name="struct">
    <field name="f1" type="long"/>
    <field name="f2" type="long"/>
    <field name="f3" type="long"/>
  </struct>

  <place name="in_A_1" type="long"/>
  <place name="in_A_2" type="long"/>

  <transition name="exp_A">
    <defun>
      <in name="l" type="long"/>
      <in name="d" type="long"/>
      <out name="s" type="struct"/>
      <out name="t" type="struct"/>
      <out name="l" type="long"/>
      <expression>
        ${s.f3} := ${d} div 8;
        ${tmp} := ${s.f3} + 2;
        ${s.f1} := ${tmp} * ${l};
        ${s.f2} := ${s.f1} + 3 * ${l};
        ${t} := ${s};
        ${t.f3} := 0;
      </expression>
    </defun>
    <connect-in port="l" place="in_A_1"/>
    <connect-in port="d" place="in_A_2"/>
    <connect-out port="s" place="out_A_1"/>
    <connect-out port="t" place="out_A_2"/>
    <connect-out port="l" place="out_A_3"/>
  </transition>

  <place name="out_A_1" type="struct"/>
  <place name="out_A_2" type="struct"/>
  <place name="out_A_3" type="long"/>

  <transition name="exp_B">
    <defun>
      <in name="state" type="struct"/>
      <in name="i" type="long"/>
      <out name="l" type="long"/>
      <expression>
        ${l} := ${i} * ${state.f3};
      </expression>
    </defun>
    <connect-in port="state" place="out_A_1"/>
    <connect-read port="i" place="out_A_3"/>
    <connect-out port="l" place="out_B_1"/>
  </transition>

  <place name="out_B_1" type="long"/>

  <struct name="state">
    <field name="i" type="long"/>
    <field name="m" type="long"/>
  </struct>

  <transition name="exp_C">
    <defun>
      <in name="s" type="struct"/>
      <in name="i" type="long"/>
      <out name="state" type="state"/>
      <expression>
        ${state.i} := ${i};
        ${state.m} := ${s.f2};
      </expression>
    </defun>
    <connect-in port="s" place="out_A_2"/>
    <connect-read port="i" place="out_A_3"/>
    <connect-out port="state" place="out_C_1"/>
  </transition>

  <place name="out_C_1" type="state"/>

  <transition name="exp_D">
    <defun>
      <in name="state" type="state"/>
      <in name="d" type="long"/>
      <out name="d" type="long"/>
      <expression>
        ${d} := ${d} + ${state.m};
      </expression>
    </defun>
    <connect-in port="state" place="out_C_1"/>
    <connect-in port="d" place="out_B_1"/>
    <connect-out port="d" place="d"/>
  </transition>

  <place name="d" type="long"/>
  </net>
</defun>
