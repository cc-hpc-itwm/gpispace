<defun name="asian">

  <struct name="param">
    <field name="S" type="double"/>
    <field name="K" type="double"/>
    <field name="T" type="double"/>
    <field name="sigma" type="double"/>
    <field name="r" type="double"/>
    <field name="d" type="double"/>

    <field name="FirstFixing" type="long"/>
    <field name="FixingsProJahr" type="double"/>
    <field name="AnzahlderDividende" type="long"/>
    <field name="n" type="long"/>

    <field name="rowID" type="long"/>
    <field name="bin" type="string"/>

    <field name="epsilon" type="double"/>
    <field name="delta" type="double"/>

    <field name="iterations_per_run" type="long"/>
  </struct>

  <struct name="sums">
    <field name="sum1" type="double"/>
    <field name="sum2" type="double"/>
    <field name="param" type="param"/>
  </struct>

  <struct name="pair_of_sums">
    <field name="one" type="sums"/>
    <field name="two" type="sums"/>
  </struct>

  <struct name="result">
    <field name="pv" type="double"/>
    <field name="stddev" type="double"/>
    <field name="Delta" type="double"/>
    <field name="Gamma" type="double"/>
    <field name="Vega" type="double"/>
    <field name="rowID" type="long"/>
  </struct>

  <in name="param" type="param" place="param"/>

  <out name="result" type="result" place="result"/>

  <net>

    <place name="param" type="param">
<!--
      <token>
        <field name="S"><value>7000.0</value></field>
        <field name="K"><value>85.0</value></field>
        <field name="T"><value>1.02</value></field>
        <field name="sigma"><value>0.2</value></field>
        <field name="r"><value>0.05</value></field>
        <field name="d"><value>0.0</value></field>
        <field name="FirstFixing"><value>1</value></field>
        <field name="FixingsProJahr"><value>50.0</value></field>
        <field name="AnzahlderDividende"><value>3</value></field>
        <field name="n"><value>200000</value></field>

        <field name="rowID"><value>0</value></field>
        <field name="bin"><value>"@BUILD@/application/asian/Asian"</value></field>

        <field name="epsilon"><value>0.01</value></field>
        <field name="delta"><value>0.01</value></field>

        <field name="iterations_per_run"><value>50000</value></field>
      </token>
-->
    </place>

    <place name="param_eps1" type="param"/>
    <place name="param_eps2" type="param"/>
    <place name="param_delta" type="param"/>

    <place name="id" type="param"/>
    <place name="eps1" type="param"/>
    <place name="eps2" type="param"/>
    <place name="delta" type="param"/>

    <transition name="id">
      <defun>
        <in name="param" type="param"/>
        <out name="param" type="param"/>
        <out name="div" type="param"/>
        <expression>
          ${div} := ${param};
        </expression>
      </defun>
      <connect-in port="param" place="param"/>
      <connect-out port="param" place="param_eps1"/>
      <connect-out port="div" place="id"/>
    </transition>

    <transition name="eps1">
      <defun>
        <in name="param" type="param"/>
        <out name="param" type="param"/>
        <out name="div" type="param"/>
        <expression>
          ${div} := ${param};
          ${div.S} := ${div.S} * (1.0 + ${div.epsilon});
        </expression>
      </defun>
      <connect-in port="param" place="param_eps1"/>
      <connect-out port="param" place="param_eps2"/>
      <connect-out port="div" place="eps1"/>
    </transition>

    <transition name="eps2">
      <defun>
        <in name="param" type="param"/>
        <out name="param" type="param"/>
        <out name="div" type="param"/>
        <expression>
          ${div} := ${param};
          ${div.S} := ${div.S} * (1.0 + 2.0 * ${div.epsilon});
        </expression>
      </defun>
      <connect-in port="param" place="param_eps2"/>
      <connect-out port="param" place="param_delta"/>
      <connect-out port="div" place="eps2"/>
    </transition>

    <transition name="delta">
      <defun>
        <in name="param" type="param"/>
        <out name="div" type="param"/>
        <expression>
          ${div} := ${param};
          ${div.sigma} := ${div.sigma} * (1.0 + ${div.delta});
        </expression>
      </defun>
      <connect-in port="param" place="param_delta"/>
      <connect-out port="div" place="delta"/>
    </transition>

    <transition name="asian_id" inline="true">
      <include-function href="run.xml"/>
      <connect-in port="param" place="id"/>
      <connect-out port="sums" place="sums_id"/>
    </transition>

    <transition name="asian_eps1" inline="true">
      <include-function href="run.xml"/>
      <connect-in port="param" place="eps1"/>
      <connect-out port="sums" place="sums_eps1"/>
    </transition>

    <transition name="asian_eps2" inline="true">
      <include-function href="run.xml"/>
      <connect-in port="param" place="eps2"/>
      <connect-out port="sums" place="sums_eps2"/>
    </transition>

    <transition name="asian_delta" inline="true">
      <include-function href="run.xml"/>
      <connect-in port="param" place="delta"/>
      <connect-out port="sums" place="sums_delta"/>
    </transition>

    <place name="sums_id" type="sums"/>
    <place name="sums_eps1" type="sums"/>
    <place name="sums_eps2" type="sums"/>
    <place name="sums_delta" type="sums"/>

    <transition name="collect" inline="true">
      <include-function href="collect.xml"/>
      <connect-in port="sums_id" place="sums_id"/>
      <connect-in port="sums_eps1" place="sums_eps1"/>
      <connect-in port="sums_eps2" place="sums_eps2"/>
      <connect-in port="sums_delta" place="sums_delta"/>
      <connect-out port="result" place="pre_result"/>
    </transition>

    <place name="pre_result" type="result"/>
    <place name="result" type="result"/>

    <transition name="done">
      <defun>
        <in name="result" type="result"/>
        <out name="result" type="result"/>
        <module name="asian" function="done (result)">
          <cinclude href="fhglog/fhglog.hpp"/>
          <code><![CDATA[
            LOG(INFO, "done row with result " << result);
          ]]></code>
        </module>
      </defun>
      <connect-in port="result" place="pre_result"/>
      <connect-out port="result" place="result"/>
    </transition>
  </net>

</defun>
