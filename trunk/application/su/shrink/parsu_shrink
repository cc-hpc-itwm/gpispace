#!/bin/bash

bin_dir=${PARSU_BIN_DIR:?}
shrink_dir=${PARSU_SHRINK_DIR:?}

xml_dir="${shrink_dir}/xml"
xml_file_in="${xml_dir}/shrink.xml.in"
xml_file="${xml_dir}/parsu_shrink.xml"
pnet_file="${shrink_dir}/shrink.pnet"

mk_xml="${shrink_dir}/mk.xml"
run="${bin_dir}/run"

shmem_per_node_default=$((2**28))
gpi_mem_per_node_default=$((2**30))

if [ $# -lt 5 ]; then
  echo "usage: $0 input-file input-type output-file output-type "su cmd" [shmem-per-node:${shmem_per_node_default}] [gpi-mem-per-node:${gpi_mem_per_node_default}]"
  exit 1
fi

inf=${1}
int=${2}
outf=${3}
outt=${4}
cmd=${5}
shmem_per_node=${6:-${shmem_per_node_default}}
gpi_mem_per_node=${7:-${gpi_mem_per_node_default}}

if [ ! -r "$inf" ] ; then
  echo "E: cannot access $inf for reading, aborting" >/dev/stderr
  exit 1
fi

abspath ()
{
  p="$1"
  case "$p" in
	/*)
	  REPLY="$p"
	  ;;
	*)
	  REPLY="`pwd`/$p"
	  ;;
  esac
  return 0
}

abspath ${inf}
abs_inf="$REPLY"

abspath ${outf}
abs_outf="$REPLY"

cleanup ()
{
  rm -f ${xml_file}
  rm -f ${pnet_file}
}
trap cleanup EXIT

echo -n "-: generating job description..." >/dev/stderr

cat ${xml_file_in} | ${mk_xml}             \
                     "${abs_inf}"          \
                     "${int}"              \
                     "${abs_outf}"         \
                     "${outt}"             \
                     "${cmd}"              \
                     "${shmem_per_node}"   \
                     "${gpi_mem_per_node}" \
                   > ${xml_file}

if [ $? -ne 0 ] ; then
  echo "E: generating failed!" >/dev/stderr
  exit 2
fi
echo "ok" >/dev/stderr

${run} ${xml_file} ${pnet_file}
