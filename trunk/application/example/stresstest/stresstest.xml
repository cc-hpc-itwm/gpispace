<defun name="stresstest">
  <in name="agg" type="long" place="N"/>
  <in name="nre" type="long" place="M"/>
  <in name="sleeptime" type="long" place="sleeptime"/>
  <out name="out" type="control" place="out"/>

  <net>
    <struct name="config">
      <field name="handle" type="long"/>
      <field name="scratch" type="long"/>
      <field name="sleeptime" type="long"/>
    </struct>

    <place name="sleeptime" type="long"><token><value>50000</value></token></place>
    <place name="N" type="long"><token><value>40</value></token></place>
    <place name="M" type="long"><token><value>1600</value></token></place>
    <place name="Nstep" type="long"/>
    <place name="wait" type="long"/>

    <place name="pending" type="long"/>

    <place name="done" type="control"/>
    <place name="out" type="control"/>

    <place name="config" type="config"/>

    <place name="trigger_initialize" type="control"/>
    <place name="trigger_finalize" type="control"/>

    <transition name="init">
      <defun>
        <in name="N" type="long"/>
        <out name="N" type="long"/>
        <out name="wait" type="long"/>
        <out name="trigger" type="control"/>
        <expression>
          ${wait} := ${N};
          ${trigger} := [];
        </expression>
      </defun>
      <connect-in port="N" place="N"/>
      <connect-out port="N" place="Nstep"/>
      <connect-out port="wait" place="wait"/>
      <connect-out port="trigger" place="trigger_initialize"/>
    </transition>

    <transition name="initialize">
      <defun>
        <in name="trigger" type="control"/>
        <in name="sleeptime" type="long"/>
        <out name="config" type="config"/>
        <module name="stresstest" function="initialize"/>
      </defun>    
      <connect-in port="trigger" place="trigger_initialize"/>
      <connect-in port="sleeptime" place="sleeptime"/>
      <connect-out port="config" place="config"/>
    </transition>

    <transition name="finalize">
      <defun>    
        <in name="trigger" type="control"/>
        <in name="config" type="config"/>
        <out name="trigger" type="control"/>
        <module name="stresstest" function="finalize"/>
      </defun>    
      <connect-in port="trigger" place="trigger_finalize"/>
      <connect-in port="config" place="config"/>
      <connect-out port="trigger" place="out"/>
    </transition>

    <transition name="generate" inline="true">
      <include-function href="sequence.xml"/>
      <connect-in place="Nstep" port="amount"/>
      <connect-out port="out" place="pending"/>
    </transition>

    <transition name="nre">
      <include-function href="stress.xml"/>
      <connect-read port="N" place="M"/>
      <connect-read port="config" place="config"/>
      <connect-out port="done" place="done"/>
      <connect-in port="trigger" place="pending"/>
    </transition>

    <transition name="dec">
      <defun>
        <in name="trigger" type="control"/>
        <in name="wait" type="long"/>
        <out name="wait" type="long"/>
        <expression>
          ${wait} := ${wait} - 1
        </expression>
        <condition>${wait} :gt: 0</condition>
      </defun>
      <connect-in port="trigger" place="done"/>
      <connect-in port="wait" place="wait"/>
      <connect-out port="wait" place="wait"/>
    </transition>
    
    <transition name="done">
      <defun>
        <in name="wait" type="long"/>
        <in name="M" type="long"/>
        <out name="done" type="control"/>
        <expression>
          ${done} := []
        </expression>
        <condition>${wait} :eq: 0</condition>
      </defun>
      <connect-in port="wait" place="wait"/>
      <connect-in port="M" place="M"/>
      <connect-out port="done" place="trigger_finalize"/>
    </transition>
  </net>
</defun>
