<defun name="loop">
  <include-structs href="types.xml"/>

  <in name="description" type="string" place="desc"/>
  <out name="done" type="control" place="clean"/>

  <net>
    <place name="desc" type="string">
      <token>
        <value>
          "/u/herc/rahn/filt.conf"
        </value>
      </token>
    </place>


    <place name="done" type="control"/>
    <place name="clean" type="control"/>
    <place name="config" type="config"/>
    <place name="store" type="long"/>
    <place name="part" type="long"/>
    <place name="wait" type="long"/>
    <place name="write_credit" type="control"/>
    <place name="part_loaded" type="part_in_store"/>
    <place name="part_filtered" type="part_in_store"/>
    <place name="part_written" type="long"/>
    <place name="num_store" type="long"/>
    <place name="num_credit" type="long"/>

    <transition name="init" inline="true">
      <include-function href="init.xml"/>
      <connect-in port="desc" place="desc"/>
      <connect-out port="write_credit" place="write_credit"/>
      <connect-out port="config" place="config"/>
      <connect-out port="store" place="store"/>
      <connect-out port="part" place="part"/>
      <connect-out port="wait" place="wait"/>
      <connect-out port="num_store" place="num_store"/>
      <connect-out port="num_credit" place="num_credit"/>
    </transition>

    <transition name="work" inline="true">
      <include-function href="work.xml"/>
      <connect-read port="config" place="config"/>
      <connect-in port="part" place="part_loaded"/>
      <connect-out port="part" place="part_filtered"/>
    </transition>

    <transition name="load">
      <defun>
        <in name="config" type="config"/>
        <in name="store" type="long"/>
        <in name="part" type="long"/>
        <out name="part_loaded" type="part_in_store"/>
        <module name="simple_process" function="load"/>
      </defun>
      <connect-read port="config" place="config"/>
      <connect-in port="store" place="store"/>
      <connect-in port="part" place="part"/>
      <connect-out port="part_loaded" place="part_loaded"/>
    </transition>

    <transition name="write">
      <defun>
        <in name="config" type="config"/>
        <in name="credit" type="control"/>
        <in name="part_in_store" type="part_in_store"/>
        <out name="credit" type="control"/>
        <out name="store" type="long"/>
        <out name="part" type="long"/>
        <module name="simple_process" function="write"/>
      </defun>
      <connect-read port="config" place="config"/>
      <connect-in port="credit" place="write_credit"/>
      <connect-in port="part_in_store" place="part_filtered"/>
      <connect-out port="store" place="store"/>
      <connect-out port="part" place="part_written"/>
      <connect-out port="credit" place="write_credit"/>
    </transition>

    <include-template href="wait.xml"/>
    <specialize name="wait_part" use="wait">
      <type-map replace="T" with="long"/>
    </specialize>

    <transition name="wait" inline="true">
      <use name="wait_part"/>
      <place-map virtual="wait" real="wait"/>
      <connect-in port="trigger" place="part_written"/>
      <connect-out port="done" place="done"/>
    </transition>

    <transition name="finalize" inline="true">
      <include-function href="finalize.xml"/>
      <place-map virtual="store" real="store"/>
      <place-map virtual="write_credit" real="write_credit"/>
      <place-map virtual="num_store" real="num_store"/>
      <place-map virtual="num_credit" real="num_credit"/>
      <connect-in port="config" place="config"/>
      <connect-in port="trigger" place="done"/>
      <connect-out port="clean" place="clean"/>
    </transition>

<!--
    <transition name="finalize">
      <defun>
        <in name="trigger" type="control"/>
        <in name="config" type="config"/>
        <out name="done" type="control"/>
        <module name="simple_process" function="finalize"/>
      </defun>
      <connect-in port="config" place="config"/>
      <connect-in port="trigger" place="done"/>
      <connect-out port="done" place="finalize_done"/>
    </transition>

    <include-template href="dup.xml"/>
    <specialize name="dup_control" use="dup">
      <type-map replace="T" with="control"/>
    </specialize>

    <transition name="dup">
      <use name="dup_control"/>
      <connect-in port="in" place="finalize_done"/>
      <connect-out port="one" place="trigger_eat_store"/>
      <connect-out port="two" place="trigger_eat_write_credit"/>
    </transition>

    <place name="trigger_eat_store" type="control"/>
    <place name="trigger_eat_write_credit" type="control"/>
    <place name="done_eat_store" type="control"/>
    <place name="done_eat_write_credit" type="control"/>

    <include-template href="eatN.xml"/>
    <specialize name="eatN_long" use="eatN">
      <type-map replace="T" with="long"/>
    </specialize>
    <specialize name="eatN_control" use="eatN">
      <type-map replace="T" with="control"/>
    </specialize>

    <transition name="eat_store" inline="true">
      <use name="eatN_long"/>
      <place-map virtual="what" real="store"/>
      <connect-in port="trigger" place="trigger_eat_store"/>
      <connect-in port="N" place="num_store"/>
      <connect-out port="done" place="done_eat_store"/>
    </transition>
    <transition name="eat_credit" inline="true">
      <use name="eatN_control"/>
      <place-map virtual="what" real="write_credit"/>
      <connect-in port="trigger" place="trigger_eat_write_credit"/>
      <connect-in port="N" place="num_credit"/>
      <connect-out port="done" place="done_eat_write_credit"/>
    </transition>
    <transition name="clean">
      <defun>
        <in name="one" type="control"/>
        <in name="two" type="control"/>
        <out name="clean" type="control"/>
        <expression>${clean} := []</expression>
      </defun>
      <connect-in port="one" place="done_eat_store"/>
      <connect-in port="two" place="done_eat_write_credit"/>
      <connect-out port="clean" place="clean"/>
    </transition>
-->
  </net>
</defun>
