#!/bin/bash
#
# wrapper around a compiler similar to icecream
#
#
# 1. prepare job description
#
#      take prepared pnet (or compile if not present)
#
# 2. place tokens
#      working directory
#      parameters
#      compiler to use (name)
#      build-environment + md5sum
#
# 3. submit
#
#      wait until finished
#      check exit code token
#      print stdout
#      print stderr

if [ -z "$SDPACC_CC" ] ; then
    SDPACC_CC="gcc"
fi
if [ -z "$SDPACC_CXX" ] ; then
    SDPACC_CXX="g++"
fi

prog_name=$(basename $0)
args="$@"
pnet="/p/herc/itwm/hpc/ap/git/SDPA/trunk/application/cc/compile.pnet"

pnet_tmp=$(mktemp)

function cc_mode ()
{
    echo "behaving like gcc" >&2
    prepare
    submit
}

function cplusplus_mode ()
{
    echo "behaving like g++" >&2
    prepare
    submit
}

function prepare ()
{
    pnetput --if ${pnet} --of ${pnet_tmp} \
              -p compiler=\"$prog_name\" \
              -p params=\""$args"\" \
              -p working_directory=\""$PWD"\" \
              -p build_environment=\"\"
}

function submit ()
{
    sdpac submit -w ${pnet_tmp}
}

case "$prog_name" in
    *cc)
	cc_mode $@
	;;
    *++)
	cplusplus_mode $@
	;;
    *)
	echo "E: dunno how to behave as $prog_name" >&2
	exit 1
	;;
esac

test -e "${pnet_tmp}" && rm -f "${pnet_tmp}"
