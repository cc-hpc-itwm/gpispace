#!/bin/bash

map_dir="@PARSU_MAP_DIR@"

global_dir=${PARSU_GLOBAL_DIR:-"${HOME}"}

if [ ! -d "${tmp_dir}" -a -w "${tmp_dir}" ] ; then
  echo "E: no (writeable) global dir given (is: \"${global_dir}\")"
  echo "set PARSU_GLOBAL_DIR or HOME"
  exit 1
fi

tune_cfg="${map_dir}/tune.conf"
xml_file_in="${map_dir}/loop.xml.in"

if [ $# -lt 5 ]; then
  echo "usage: $0 input-file input-type output-file output-type su-pipeline"
  exit 1
fi

inf=${1:?}
int=${2:?}
outf=${3:?}
outt=${4:?}
prog=${5:?}

if [ ! -r "$inf" ] ; then
  echo "E: cannot access $inf for reading, aborting" >/dev/stderr
  exit 1
fi

if [ "${int}" != "${outt}" ] ; then
  echo "E: input type must be the same as output type" >/dev/stderr
  exit 1
fi

tmp_dir=${PARSU_TMP_DIR:-${TMPDIR}}

if [ ! -d "${tmp_dir}" -a -w "${tmp_dir}" ] ; then
  echo "E: no (writeable) temp dir given (is: \"${tmp_dir}\")"
  echo "set PARSU_TMP_DIR or TMPDIR"
  exit 1
fi

filter_cfg=$( mktemp "${global_dir}/parsu_map.conf.XXXXXX" )
if [ $? -ne 0 ] ; then
  echo "could not create temporary file in ${global_dir}" >/dev/stderr
  exit 2
fi

if [ -r "$tune_cfg" ] ; then
  cat "$tune_cfg" > "$filter_cfg"
else
  echo "W: could not read $tune_cfg" >/dev/stderr
fi

abspath ()
{
  p="$1"
  case "$p" in
	/*)
	  REPLY="$p"
	  ;;
	*)
	  REPLY="`pwd`/$p"
	  ;;
  esac
  return 0
}

abspath ${inf}
abs_inf="$REPLY"

abspath ${outf}
abs_outf="$REPLY"

# create the shell script to execute the filter
script=$( mktemp "${global_dir}/parsu_map.sh.XXXXXX" )
if [ $? -ne 0 ] ; then
  echo "could not create temporary file in ${global_dir}" >/dev/stderr
  exit 2
fi

cat > "${script}" <<EOF
#!/bin/bash
$prog $@
EOF
chmod +x "${script}"

cat >> "${filter_cfg}" <<EOF
input.file ${abs_inf}
input.type ${int}
output.file ${abs_outf}
output.type ${outt}
exec.su "${script}"
EOF

xml_file=$( mktemp "${tmp_dir}/parsu_map.xml.XXXXXX" )
if [ $? -ne 0 ] ; then
  echo "could not create temporary file in ${tmp_dir}" >/dev/stderr
  exit 2
fi

pnet_file=$( mktemp "${tmp_dir}/parsu_map.pnet.XXXXXX" )
if [ $? -ne 0 ] ; then
  echo "could not create temporary file in ${tmp_dir}" >/dev/stderr
  exit 2
fi

cleanup ()
{
  rm -f "${script}"
  rm -f "${filter_cfg}"
  rm -f "${xml_file}"
  rm -f "${pnet_file}"
}
trap cleanup EXIT

echo "-: generated script file: (${script})" >/dev/stderr
cat "${script}" >/dev/stderr

echo "-: generated config: (${filter_cfg})" >/dev/stderr
cat "${filter_cfg}" >/dev/stderr

echo -n "-: generating job description..." >/dev/stderr
cat "${xml_file_in}" | sed "s|#CONFIG_FILE#|${filter_cfg}|" > "${xml_file}"
if [ $? -ne 0 ] ; then
  echo "E: generating failed!" >/dev/stderr
  exit 2
fi
echo "ok" >/dev/stderr

PARSU_PNETC_LIB_DIR="${map_dir} -I @PARSU_PNETC_LIB_DIR@" \
parsu_run "${xml_file}" "${pnet_file}"
