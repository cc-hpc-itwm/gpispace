<defun>
  <in name="config" type="config" place="config"/>
  <out name="bunch" type="long" place="bunch"/>
  <out name="volume" type="long" place="volume"/>

  <net>
    <place name="config" type="config"/>
    <place name="config_bunch" type="config"/>
    <place name="config_volume" type="config"/>
    <place name="bunch" type="long"/>
    <place name="volume" type="long"/>

    <include-template href="dup.xml"/>
    <specialize name="dup.config" use="dup">
      <type-map replace="T" with="config"/>
    </specialize>

    <transition name="dup_config" inline="true">
      <use name="dup.config"/>
      <connect-in port="in" place="config"/>
      <connect-out port="one" place="config_bunch"/>
      <connect-out port="two" place="config_volume"/>
    </transition>

    <transition name="generate_bunch" inline="true">
      <defun>
        <in name="config" type="config" place="config"/>
        <out name="id" type="long" place="id"/>
        <net>
          <place name="config" type="config"/>
          <place name="id" type="long"/>
          <transition name="extract">
            <defun>
              <in name="config" type="config"/>
              <out name="N" type="long"/>
              <expression>${N} := ${config.size.store.bunch}</expression>
            </defun>
            <connect-in port="config" place="config"/>
            <connect-out port="N" place="N"/>
          </transition>
          <place name="N" type="long"/>
          <transition name="generate" inline="true">
            <include-function href="sequence.xml"/>
            <connect-in port="amount" place="N"/>
            <connect-out port="out" place="id"/>
          </transition>
        </net>
      </defun>
      <connect-in port="config" place="config_bunch"/>
      <connect-out port="id" place="bunch"/>
    </transition>

    <transition name="generate_volume" inline="true">
      <defun>
        <in name="config" type="config" place="config"/>
        <out name="id" type="long" place="id"/>
        <net>
          <place name="config" type="config"/>
          <place name="id" type="long"/>
          <transition name="extract">
            <defun>
              <in name="config" type="config"/>
              <out name="N" type="long"/>
              <expression>${N} := ${config.size.store.volume}</expression>
            </defun>
            <connect-in port="config" place="config"/>
            <connect-out port="N" place="N"/>
          </transition>
          <place name="N" type="long"/>
          <transition name="generate" inline="true">
            <include-function href="sequence.xml"/>
            <connect-in port="amount" place="N"/>
            <connect-out port="out" place="id"/>
          </transition>
        </net>
      </defun>
      <connect-in port="config" place="config_volume"/>
      <connect-out port="id" place="volume"/>
    </transition>
  </net>
</defun>
