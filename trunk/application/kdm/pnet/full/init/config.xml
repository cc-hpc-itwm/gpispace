<defun>

  <in name="file_config" type="string" place="file_config"/>
  <in name="file_param" type="string" place="file_param"/>
  <in name="memsizeGPI" type="long" place="memsizeGPI"/>

  <out name="config" type="config" place="config"/>
  <out name="assoc" type="map" place="assoc"/>
  <out name="volumes_left" type="long" place="volumes_left"/>

  <net>

    <place name="file_config" type="string"/>
    <place name="file_param" type="string"/>
    <place name="memsizeGPI" type="long"/>
    <place name="config" type="config"/>
    <place name="assoc" type="map"/>
    <place name="volumes_left" type="long"/>

    <transition name="init">
      <defun>
        <in name="file_config" type="string"/>
        <in name="file_param" type="string"/>
        <in name="memsizeGPI" type="long"/>
        <out name="config" type="config"/>
        <module name="kdmfull"
                function="config initialize (file_config, memsizeGPI)"/>
      </defun>
      <connect-in port="file_config" place="file_config"/>
      <connect-in port="file_param" place="file_param"/>
      <connect-in port="memsizeGPI" place="memsizeGPI"/>
      <connect-out port="config" place="config_initialized"/>
    </transition>

    <place name="config_initialized" type="config"/>

    <transition name="set_derived">
      <defun>
        <in name="config" type="config"/>
        <out name="config" type="config"/>
        <out name="left" type="long"/>
        <out name="assoc" type="map"/>
        <expression>
          ${assoc} := [||];
          ${left} := ${config.offsets}
                   * ${config.per.offset.volumes}
                   * ${config.per.volume.copies};
        </expression>
      </defun>
      <connect-in port="config" place="config_initialized"/>
      <connect-out port="config" place="config"/>
      <connect-out port="assoc" place="assoc"/>
      <connect-out port="left" place="volumes_left"/>
    </transition>
  </net>
</defun>
