<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" >
	<xsd:annotation>
		<xsd:documentation>
		      SDPA Petri Net XML Schema
  	  	</xsd:documentation>
	</xsd:annotation>
	
	<xsd:element name="defun" type="function_type"/>
	
    <!--  change this to enumeration xs:include basic_literals.xml.
    simply define in basic_literals predefined simple or complex types (signature)
    or at the beginning of the network 
     -->
    <xsd:complexType name="typedef_field_type" >
        <xsd:sequence>
        	<xsd:element name="field" type="typedef_field_type" minOccurs="0" maxOccurs="unbounded" />
		</xsd:sequence>
   		<xsd:attribute name="name" type="xsd:string" use="required" />
   		
   		<!--  references a typedef_type -->
    	<xsd:attribute name="type" type="xsd:string" use="optional"  />  
    </xsd:complexType>
     
    <xsd:complexType name="token_field_type" >
        <xsd:choice maxOccurs="unbounded">
			<xsd:element name="field" type="token_field_type" />
			<xsd:element name="value" type="xsd:string" />
   		</xsd:choice>
   		<xsd:attribute name="name" type="xsd:string" use="required" />
   		
   		<!--  references a typedef_type -->
    	<xsd:attribute name="type" type="xsd:string" use="optional"  />  
    </xsd:complexType>
      
    <xsd:complexType name="typedef_type">
   		<xsd:sequence>
   			<xsd:element maxOccurs="unbounded" minOccurs="0" name="field" type="typedef_field_type"/>
   		</xsd:sequence>
   		 <xsd:attribute name="name" type="xsd:ID" use="required"/>
    </xsd:complexType>
    
    <xsd:complexType name="token_type">
   		<xsd:choice>
			<xsd:element name="value" type="xsd:string"/>
	   		<xsd:element name="field" type="token_field_type" minOccurs="0" maxOccurs="unbounded" />
	   	</xsd:choice>
		<!--  references a typedef_type -->
		<xsd:attribute name="type" type="xsd:string" use="required"/>
    </xsd:complexType>
    
	<xsd:complexType name="place_type">
		<xsd:sequence>
	  		<xsd:element maxOccurs="unbounded" minOccurs="0" name="token" type="token_type" />
		</xsd:sequence>
		
		<xsd:attribute name="name" type="xsd:string" use="required" />
		<xsd:attribute name="capacity" type="xsd:nonNegativeInteger" use="optional" />
	
		<!--  references a typedef_type -->
		<xsd:attribute name="type" type="xsd:string" use="required"/>
	</xsd:complexType> 
	
	 <xsd:complexType name="port_type">
	  <!-- this should be the name of a place -->
		<xsd:attribute name="name" type="xsd:string" use="required"/>     
		<xsd:attribute name="type" type="xsd:string" use="required"/>
		<xsd:attribute name="place" type="xsd:string" use="optional" />
	</xsd:complexType>
	
	 <xsd:complexType name="mod_type">
    	<xsd:attribute name="name" type="xsd:string" use="required" />
      	<xsd:attribute name="function" type="xsd:string" use="required" />
    </xsd:complexType>

    <xsd:complexType name="type_map_type">
    	<xsd:attribute name="from" type="xsd:string" use="required" />
      	<xsd:attribute name="to"   type="xsd:string" use="required" />
    </xsd:complexType>
          	
	<!--  this corresponds to transition_type -->
	<xsd:complexType name="function_type" >
		<xsd:sequence>
	    	<xsd:choice>
				<xsd:sequence minOccurs="0">
					<xsd:element maxOccurs="unbounded" minOccurs="1" name="in" type="port_type" />
					<xsd:element maxOccurs="unbounded" minOccurs="0" name="out" type="port_type" />

					<xsd:choice minOccurs="1">
						<xsd:element name="expression" type="xsd:string" />
						<xsd:element name="module" type="mod_type" />
						<xsd:element name="net" type="net_type" />
					</xsd:choice>
				</xsd:sequence>
	    	</xsd:choice>
		    <xsd:element name="condition" type="xsd:string" minOccurs="0" maxOccurs="1" default="true" />
		</xsd:sequence>	    
		<xsd:attribute name="name" type="xsd:string" />
		<xsd:attribute name="internal" type="xsd:boolean" use="optional" />
	</xsd:complexType>
	
	<xsd:complexType name="connect_type">
		<xsd:attribute name="place" type="xsd:string" use="required" />
		<xsd:attribute name="port" type="xsd:string" use="required" />
	</xsd:complexType>
	
	<xsd:complexType name="transition_type" >
		<xsd:sequence>
			<xsd:element name="defun" type="function_type" minOccurs="0" maxOccurs="1" />
		    <xsd:choice maxOccurs="unbounded">
				<xsd:element name="connect-in" type="connect_type"  />
				<xsd:element name="connect-out" type="connect_type" />
				<xsd:element name="connect-read" type="connect_type" />
			</xsd:choice>
<!-- 		<xsd:element name="map-type" type="type_map_type" minOccurs="0" maxOccurs="unbounded"/> -->	
		</xsd:sequence>
		<xsd:attribute name="name" type="xsd:string" use="required"/>
		
		<!--  refers to a function_type name -->
		<xsd:attribute name="use" type="xsd:string" use="optional"/>
	</xsd:complexType>
	
	<xsd:complexType name="net_type">
       <xsd:choice maxOccurs="unbounded">
           <xsd:element name="typedef" type="typedef_type"/>
           <xsd:element name="place" type="place_type"/>
           <xsd:element name="defun" type="function_type"/>
           <xsd:element name="transition" type="transition_type" />
       </xsd:choice>
	</xsd:complexType>
</xsd:schema>
