// Copyright (C) 2025 Fraunhofer ITWM
// SPDX-License-Identifier: GPL-3.0-or-later

#include <boost/test/unit_test.hpp>

#include <xml/parse/parser.hpp>
#include <xml/parse/state.hpp>
#include <xml/parse/error.hpp>

#include <util-generic/testing/flatten_nested_exceptions.hpp>
#include <util-generic/testing/require_exception.hpp>

#include <fmt/core.h>
#include <FMT/boost/filesystem/path.hpp>

BOOST_AUTO_TEST_CASE (function_description_with_unknown_return_port)
{
  xml::parse::state::type state;

  std::string const filename
    ("@XML_PARSE_TEST_XPNETS_DIR@/"
     "diagnostics/function_description_with_unknown_return_port.xpnet"
    );

  fhg::util::testing::require_exception_with_message
    <xml::parse::error::function_description_with_unknown_port>
  ( [&state, &filename] { xml::parse::just_parse (state, filename); }
  , fmt::format ( "ERROR: unknown {} port {}"
                  " in description of function {}.{} in {}"
                , "return"
                , "r"
                , "m"
                , "f"
                , boost::filesystem::path (filename)
                )
  );
}

BOOST_AUTO_TEST_CASE (function_description_with_unknown_argument_port)
{
  xml::parse::state::type state;

  std::string const filename
    ("@XML_PARSE_TEST_XPNETS_DIR@/"
     "diagnostics/function_description_with_unknown_argument_port.xpnet"
    );

  fhg::util::testing::require_exception_with_message
    <xml::parse::error::function_description_with_unknown_port>
  ( [&state, &filename] { xml::parse::just_parse (state, filename); }
  , fmt::format ( "ERROR: unknown {} port {}"
                  " in description of function {}.{} in {}"
                , "argument"
                , "p"
                , "m"
                , "f"
                , boost::filesystem::path (filename)
                )
  );
}
