// This file is part of GPI-Space.
// Copyright (C) 2022 Fraunhofer ITWM
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <https://www.gnu.org/licenses/>.

#include <boost/test/unit_test.hpp>

#include <xml/parse/parser.hpp>
#include <xml/parse/state.hpp>
#include <xml/parse/error.hpp>

#include <util-generic/testing/flatten_nested_exceptions.hpp>
#include <util-generic/testing/require_exception.hpp>

BOOST_AUTO_TEST_CASE (function_description_with_unknown_return_port)
{
  xml::parse::state::type state;

  std::string const filename
    ("@XML_PARSE_TEST_XPNETS_DIR@/"
     "diagnostics/function_description_with_unknown_return_port.xpnet"
    );

  fhg::util::testing::require_exception_with_message
    <xml::parse::error::function_description_with_unknown_port>
  ( [&state, &filename] { xml::parse::just_parse (state, filename); }
  , boost::format ("ERROR: unknown %1% port %2%"
                   " in description of function %3%.%4% in %5%"
                  )
  % "return" % "r" % "m" % "f" % boost::filesystem::path (filename)
  );
}

BOOST_AUTO_TEST_CASE (function_description_with_unknown_argument_port)
{
  xml::parse::state::type state;

  std::string const filename
    ("@XML_PARSE_TEST_XPNETS_DIR@/"
     "diagnostics/function_description_with_unknown_argument_port.xpnet"
    );

  fhg::util::testing::require_exception_with_message
    <xml::parse::error::function_description_with_unknown_port>
  ( [&state, &filename] { xml::parse::just_parse (state, filename); }
  , boost::format ("ERROR: unknown %1% port %2%"
                   " in description of function %3%.%4% in %5%"
                  )
  % "argument" % "p" % "m" % "f" % boost::filesystem::path (filename)
  );
}
