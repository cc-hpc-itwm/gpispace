<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2022 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<defun name="map">
  <in name="N" type="long" place="N"/>
  <out name="done" type="control" place="done"/>
  <net>
    <place name="N" type="long"/>
    <place name="i" type="long"/>
    <place name="done" type="control"/>

    <include-template href="dup.xml"/>
    <specialize name="dup_long" use="dup">
      <type-map replace="T" with="long"/>
    </specialize>

    <place name="N_gen" type="long"/>
    <place name="wait" type="long"/>

    <transition name="dup">
      <use name="dup_long"/>
      <connect-in port="in" place="N"/>
      <connect-out port="one" place="N_gen"/>
      <connect-out port="two" place="wait"/>
    </transition>

    <transition name="generate" inline="true">
      <include-function href="sequence_bounded.xml"/>
      <place-map virtual="credit" real="credit"/>
      <connect-in port="amount" place="N_gen"/>
      <connect-out port="out" place="i"/>
    </transition>

    <transition name="calc">
      <defun>
        <in name="i" type="long"/>
        <out name="i" type="long"/>
        <module name="calc" function="calc"/>
      </defun>
      <connect-in port="i" place="i"/>
      <connect-out port="i" place="i_done"/>
    </transition>

    <place name="i_done" type="long"/>
    <place name="i_dec" type="long"/>

    <include-template href="trigger_when.xml"/>
    <specialize name="trigger_when_long" use="trigger_when">
      <type-map replace="T" with="long"/>
    </specialize>

    <transition name="when_done">
      <use name="trigger_when_long"/>
      <connect-in port="object" place="i_done"/>
      <connect-out port="object" place="i_dec"/>
      <connect-out port="trigger" place="credit"/>
    </transition>

    <place name="credit" type="control">
      <token><value>[]</value></token>
      <token><value>[]</value></token>
    </place>

    <include-template href="wait.xml"/>
    <specialize name="wait_long" use="wait">
      <type-map replace="T" with="long"/>
    </specialize>

    <transition name="wait">
      <use name="wait_long"/>
      <place-map virtual="wait" real="wait"/>
      <connect-in port="trigger" place="i_dec"/>
      <connect-out port="done" place="done"/>
    </transition>
  </net>
</defun>
