<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2022 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<defun name="run_bunch_of_tasks_with_put_token">
  <properties name="drts">
    <property key="wait_for_output" value="true"/>
  </properties>
  <in name="start" type="control" place="start"/>
  <in name="num_tasks" type="long" place="num_tasks"/>
  <out name="done" type="control" place="done"/>
  <net>
    <place name="start" type="control" put_token="true"/>
    <place name="num_tasks" type="long"/>
    <place name="done" type="control"/>

    <place name="task_finished" type="control"/>
    <transition name="execute_task">
      <defun>
        <in name="start" type="control"/>
        <out name="task_finished" type="control"/>
        <module name="test_module" function="task (task_finished)">
          <code><![CDATA[
            task_finished = we::type::literal::control();
         ]]></code>
       </module>
      </defun>
      <connect-in port="start" place="start"/>
      <connect-out port="task_finished" place="task_finished"/>
    </transition>

    <include-template href="wait.xml"/>
    <specialize name="wait_control" use="wait">
      <type-map replace="T" with="control"/>
    </specialize>

    <transition name="wait">
      <use name="wait_control"/>
      <place-map virtual="wait" real="num_tasks"/>
      <connect-in port="trigger" place="task_finished"/>
      <connect-out port="done" place="done"/>
    </transition>
  </net>
</defun>
