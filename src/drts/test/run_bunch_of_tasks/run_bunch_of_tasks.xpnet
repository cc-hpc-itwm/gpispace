<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2021 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<defun name="run_bunch_of_tasks">
  <in name="num_tasks" type="long" place="num_tasks"/>
  <out name="done" type="control" place="done"/>

  <net>
    <place name="num_tasks" type="long"/>
    <place name="done" type="control"/>

    <include-template href="dup.xml"/>
    <specialize name="dup_task_number" use="dup">
      <type-map replace="T" with="long"/>
    </specialize>

    <place name="num_remaining_tasks" type="long"/>
    <place name="num_tasks_gen" type="long"/>
    <transition name="dup_num_tasks" inline="true">
      <use name="dup_task_number"/>
      <connect-in port="in" place="num_tasks"/>
      <connect-out port="one" place="num_remaining_tasks"/>
      <connect-out port="two" place="num_tasks_gen"/>
    </transition>

    <place name="task_id" type="long"/>
    <transition name="generate_task_ids" inline="true">
      <include-function href="sequence.xml"/>
      <connect-in port="amount" place="num_tasks_gen"/>
      <connect-out port="out" place="task_id"/>
    </transition>

    <place name="task_finished" type="control"/>
    <transition name="test_transition">
      <defun>
        <in name="task_id" type="long"/>
        <out name="task_finished" type="control"/>
        <module name="test_module"
                function="task (task_finished)">
          <code><![CDATA[
            task_finished = we::type::literal::control();
          ]]></code>
        </module>
      </defun>
      <connect-in port="task_id" place="task_id"/>
      <connect-out port="task_finished" place="task_finished"/>
    </transition>

    <include-template href="wait.xml"/>
    <specialize name="wait_control" use="wait">
      <type-map replace="T" with="control"/>
    </specialize>

    <transition name="wait">
      <use name="wait_control"/>
      <place-map virtual="wait" real="num_remaining_tasks"/>
      <connect-in port="trigger" place="task_finished"/>
      <connect-out port="done" place="done"/>
    </transition>
  </net>
</defun>
