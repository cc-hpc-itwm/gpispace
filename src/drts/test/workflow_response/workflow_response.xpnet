<defun name="workflow_response">
  <inout name="state" type="unsigned long" place="state"/>
  <out name="done" type="control" place="done"/>
  <net>
    <place name="state" type="unsigned long"/>
    <place name="done" type="control" put_token="true"/>
    <struct name="value_and_endpoint">
      <field name="value" type="unsigned long"/>
      <field name="address" type="string"/>
      <field name="port" type="unsigned int"/>
    </struct>
    <place name="get_and_update_state" type="value_and_endpoint" put_token="true"/>
    <transition name="get_and_update_state">
      <defun>
        <inout name="state" type="unsigned long"/>
        <in name="trigger" type="value_and_endpoint"/>
        <module name="workflow_response" function="response (state, trigger)">
          <cinclude href="drts/workflow_response.hpp"/>
          <ld flag="-lgspc"/>
          <code><![CDATA[
          gspc::workflow_response (trigger.address, trigger.port, state);

          state += trigger.value;
          ]]></code>
        </module>
      </defun>
      <connect-inout port="state" place="state"/>
      <connect-in port="trigger" place="get_and_update_state"/>
    </transition>
  </net>
</defun>
