job:
  script:
    - source_dir=$(readlink -f ${PWD})
    - test_dir="$(mktemp -d --tmpdir=${source_dir})"
    - trap "rm -rf ${test_dir}" EXIT
    - pushd "${test_dir}"
    - cmakelists="${test_dir}/CMakeLists.txt"
    - echo -e "cmake_minimum_required (VERSION 3.1 FATAL_ERROR)\n"
              "set (CMAKE_CXX_STANDARD 11)\n"
              "include (CTest)\n"
              "enable_testing()\n"
              "include_directories (src)\n" >> "${cmakelists}"
    - while read url path version; do
        mkdir -p "${path}";
        git clone -nq "${url}" "${path}";
        pushd "${path}" >/dev/null;
        git checkout "${version}"; git submodule update --init --recursive;
        popd >/dev/null;
        echo "add_subdirectory (${path})" >> "${cmakelists}";
      done < <( echo git@gitlab.hpc.devnet.itwm.fhg.de:shared/cmake.git cmake master
              ; echo git@gitlab.hpc.devnet.itwm.fhg.de:shared/util-generic.git src/util-generic master
              ; echo file://${source_dir} src/util-qt ${CI_BUILD_REF}
              )
    - cmake . -DCMAKE_BUILD_TYPE=Release
    - make -j ${PARALLEL_JOBS}
    - ctest --output-on-failure -j ${PARALLEL_JOBS}

before_script:
  - EXTERNAL_SOFTWARE=/home/projects/sdpa/external_software

  - export PATH=${EXTERNAL_SOFTWARE}/git/2.6.3/bin:${PATH}

  - export PATH=${EXTERNAL_SOFTWARE}/gcc/4.9.2/bin:${PATH}
  - export LD_LIBRARY_PATH=${EXTERNAL_SOFTWARE}/gcc/4.9.2/lib64:${LD_LIBRARY_PATH}
  - export CC=$(which gcc)
  - export CXX=$(which c++)

  - export HWLOC_HOME=${EXTERNAL_SOFTWARE}/hwloc/1.10.1
  - export PKG_CONFIG_PATH=${HWLOC_HOME}/lib/pkgconfig:${PKG_CONFIG_PATH}

  - export QTDIR=${EXTERNAL_SOFTWARE}/qt/5.9.1
  - export PATH=${QTDIR}/bin:${PATH}

  - export BOOST_ROOT=${EXTERNAL_SOFTWARE}/boost/1.59/gcc

  - export GASPI_HOME=${EXTERNAL_SOFTWARE}/gaspi/1.2.0+eth
  - export PKG_CONFIG_PATH=${GASPI_HOME}/lib64/pkgconfig

  - export PKG_CONFIG_PATH=${EXTERNAL_SOFTWARE}/libssh2/1.6.0/lib/pkgconfig:${PKG_CONFIG_PATH}

  - export OPENSSL_ROOT_DIR=${EXTERNAL_SOFTWARE}/openssl/1.0.2d
  - export LD_LIBRARY_PATH=${EXTERNAL_SOFTWARE}/openssl/1.0.2d/lib:${LD_LIBRARY_PATH}
  - export PKG_CONFIG_PATH=${EXTERNAL_SOFTWARE}/openssl/1.0.2d/lib/pkgconfig:${PKG_CONFIG_PATH}

  - export PATH=${EXTERNAL_SOFTWARE}/cmake/3.9.1/bin:$PATH
  - export PATH=${EXTERNAL_SOFTWARE}/chrpath/0.16/bin:$PATH

  - PARALLEL_JOBS=$(nproc)
