<defun>

  <in name="config" type="config" place="config"/>
  <out name="store_bunch" type="store_bunch" place="store_bunch"/>
  <out name="number" type="long" place="number"/>

  <net>

    <place name="config" type="config"/>

    <place name="store_bunch" type="store_bunch"/>

    <place name="N" type="long"/>
    <place name="number" type="long"/>
    <place name="id" type="long"/>

    <transition name="extract">
      <defun>
        <in name="config" type="config"/>
        <out name="N" type="long"/>
        <out name="number" type="long"/>
        <expression>
          ${N} := ${config.size.store.bunch};
          ${number} := ${N}
        </expression>
      </defun>
      <connect-in port="config" place="config"/>
      <connect-out port="N" place="N"/>
      <connect-out port="number" place="number"/>
    </transition>

    <transition name="generate" inline="true">
      <include-function href="sequence.xml"/>
      <connect-in port="amount" place="N"/>
      <connect-out port="out" place="id"/>
    </transition>

    <transition name="translate">
      <defun>
        <in name="id" type="long"/>
        <out name="store" type="store_bunch"/>
        <expression>
          ${store.id} := ${id};
        </expression>
      </defun>
      <connect-in port="id" place="id"/>
      <connect-out port="store" place="store_bunch"/>
    </transition>

  </net>

</defun>
