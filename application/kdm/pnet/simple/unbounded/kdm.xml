<defun name="kdm_simple">

  <include-structs href="types.xml"/>

  <in name="config_file" type="string" place="config_file"/>
  <out name="done" type="control" place="done"/>

  <net>

<!--
       <value>"/p/herc/itwm/hpc/soft/sdpa/kdm/Kirchhoff_TestKDMDaniel_new_fineTT_fineSL.xml"</value>
       <value></value>
       <value>"/p/herc/itwm/hpc/soft/sdpa/kdm/Kirchhoff_ImpResp.xml"</value>
"/p/herc/itwm/hpc/soft/sdpa/kdm/Kirchhoff_TestKDMDaniel_new_fineTT_fineSL.ImpResp.xml"</value>
-->

   <place name="config_file" type="string">
<!--
     <token>
       <value>
"/p/herc/itwm/hpc/soft/sdpa/kdm/Kirchhoff_Model.xml"
</value>
     </token>
-->
   </place>
   <place name="done" type="control"/>

   <transition name="initialize">
     <defun>
       <in name="config_file" type="string"/>
       <out name="config" type="CONFIG" />
       <module name="kdm" function="config initialize (config_file)"/>
     </defun>
     <connect-in place="config_file" port="config_file"/>
     <connect-out port="config" place="config"/>
   </transition>

    <place name="config" type="CONFIG"/>
    <place name="wait" type="long"/>

    <transition name="init_wait">
      <defun>
        <in name="config" type="CONFIG"/>
        <out name="wait" type="long"/>
        <expression>
          ${wait} := ${config.OFFSETS} * ${config.SUBVOLUMES_PER_OFFSET}
        </expression>
      </defun>
      <connect-in port="config" place="config_init_wait"/>
      <connect-out port="wait" place="wait"/>
    </transition>
    <place name="config_init_wait" type="CONFIG"/>

    <include-template href="4.xml"/>
    <specialize name="scatter_config" use="quad">
      <type-map replace="T" with="CONFIG"/>
    </specialize>

    <transition name="scatter_config" inline="true">
      <use name="scatter_config"/>
      <connect-in port="in" place="config"/>
      <connect-out port="one" place="config_generate_volume"/>
      <connect-out port="two" place="config_generate_offsets"/>
      <connect-out port="three" place="config_loadTT"/>
      <connect-out port="four" place="config_init_wait"/>
    </transition>

    <place name="config_loadTT" type="CONFIG"/>
    <transition name="loadTT" inline="true">
      <include-function href="loadTT.xml"/>
      <connect-out port="config" place="config_process"/>
      <connect-in port="config" place="config_loadTT"/>
    </transition>
    <place name="config_process" type="CONFIG"/>

    <transition name="generate_offsets" inline="true">
      <defun>
        <in name="config" type="CONFIG" place="config"/>
        <out name="offset" type="long" place="offset"/>
        <net>
          <place name="config" type="CONFIG"/>
          <place name="offset" type="long"/>
          <place name="number_of_offsets" type="long"/>

          <transition name="extract">
            <defun>
              <in name="config" type="CONFIG" />
              <out name="offsets" type="long" />
              <expression>
                ${offsets} := ${config.OFFSETS}
              </expression>
            </defun>
            <connect-in place="config" port="config" />
            <connect-out  port="offsets" place="number_of_offsets" />
          </transition>

          <transition name="generate_offset" inline="true">
            <include-function href="sequence.xml"/>
            <connect-in place="number_of_offsets" port="amount"/>
            <connect-out place="offset" port="out"/>
          </transition>
        </net>
      </defun>
      <connect-in port="config" place="config_generate_offsets"/>
      <connect-out port="offset" place="offset"/>
    </transition>
    <place name="config_generate_offsets" type="CONFIG"/>

    <transition name="generate_volumes" inline="true">
      <defun>
        <in name="config" type="CONFIG" place="config"/>
        <in name="offset" type="long" place="offset"/>
        <out name="volume" type="VOLUME" place="volume"/>
        <net>
          <place name="config" type="CONFIG"/>
          <place name="offset" type="long"/>
          <place name="number_of_volumes" type="long"/>
          <place name="volume" type="VOLUME"/>

          <transition name="extract_number_of_volumes">
            <defun>
              <in name="config" type="CONFIG"/>
              <out name="volumes" type="long"/>
              <expression>
                ${volumes} := ${config.SUBVOLUMES_PER_OFFSET};
              </expression>
            </defun>
            <connect-in place="config" port="config"/>
            <connect-out port="volumes" place="number_of_volumes"/>
          </transition>
          <transition name="generate_volume" inline="true">
            <include-function href="generate_volume.xml"/>
            <connect-in place="offset" port="offset" />
            <connect-in place="number_of_volumes" port="amount" />
            <connect-out place="volume" port="out" />
          </transition>
        </net>
      </defun>
      <connect-read port="config" place="config_generate_volume"/>
      <connect-in port="offset" place="offset"/>
      <connect-out port="volume" place="volume"/>
    </transition>
    <place name="config_generate_volume" type="CONFIG"/>

    <place name="offset" type="long"/>

    <!--  check if this type is defined!!!! -->
    <place name="volume" type="VOLUME"/>

    <!-- wrap process volume so that it will be executed on the nre-pcd -->
    <transition name="process_volume">
      <defun internal="false">
        <in name="volume" type="VOLUME"  place="volume"/>
        <in name="config" type="CONFIG"  place="config"/>
        <out name="volume"  type="VOLUME" place="volume_out"/>
        <net>
          <place name="volume" type="VOLUME" />
          <place name="config" type="CONFIG" />
          <place name="volume_out" type="VOLUME" />

          <transition name="process_volume">
            <include-function href="process.xml" />
            <connect-in place="volume" port="volume" />
            <connect-in place="config" port="config" />
            <connect-out place="volume_out"   port="volume" />
          </transition>
        </net>
      </defun>
      <connect-in place="volume" port="volume" />
      <connect-read place="config_process" port="config" />
      <connect-out place="volume_done" port="volume" />
    </transition>

    <place name="volume_done" type="VOLUME" />

    <include-template href="wait.xml"/>
    <specialize name="wait_VOLUME" use="wait">
      <type-map replace="T" with="VOLUME"/>
    </specialize>

    <transition name="wait_volume" inline="true">
      <use name="wait_VOLUME"/>
      <place-map virtual="wait" real="wait"/>
      <connect-in port="trigger" place="volume_done"/>
      <connect-out port="done" place="trigger_finalize"/>
    </transition>

    <place name="trigger_finalize" type="control"/>

    <transition name="finalize" inline="true">
      <defun>
        <in name="trigger" type="control" place="trigger"/>
        <in name="config_A" type="CONFIG" place="config_A"/>
        <in name="config_B" type="CONFIG" place="config_B"/>
        <out name="done" type="control" place="done"/>
        <net>
          <place name="trigger" type="control"/>
          <place name="config_A" type="CONFIG"/>
          <place name="config_B" type="CONFIG"/>
          <place name="done" type="control"/>

          <transition name="collect_config">
            <defun>
              <in name="trigger" type="control"/>
              <in name="config_A" type="CONFIG"/>
              <in name="config_B" type="CONFIG"/>
              <out name="config_A" type="CONFIG"/>
              <expression></expression>
            </defun>
            <connect-in port="config_A" place="config_A"/>
            <connect-in port="config_B" place="config_B"/>
            <connect-out port="config_A" place="config_finalize"/>
            <connect-in port="trigger" place="trigger"/>
          </transition>

          <transition name="finalize">
            <defun internal="false">
              <in  name="config" type="CONFIG" />
              <out name="trigger" type="control" />
              <module name="kdm" function="trigger finalize (config)"/>
            </defun>
            <connect-in place="config_finalize" port="config"/>
            <connect-out place="done" port="trigger"/>
          </transition>
          <place name="config_finalize" type="CONFIG"/>
        </net>
      </defun>
      <connect-in port="trigger" place="trigger_finalize"/>
      <connect-in port="config_A" place="config_process"/>
      <connect-in port="config_B" place="config_generate_volume"/>
      <connect-out port="done" place="done"/>
    </transition>
  </net>

</defun>
