<defun name="calc">

  <include-structs href="types.xml"/>

  <in name="description" type="string" place="description"/>
  <in name="file_with_config" type="string" place="file_with_config"/>
  <out name="done" type="control" place="done"/>

  <net>

    <place name="description" type="string"/>
    <place name="file_with_config" type="string"/>
    <place name="config" type="config"/>
    <place name="done" type="control"/>

    <transition name="init" inline="true">
      <defun>
        <in name="file_with_config" type="string" place="file_with_config"/>
        <out name="config" type="config" place="config"/>
        <out name="wait" type="long" place="wait"/>
        <out name="interval_size" type="long" place="interval_size"/>
        <out name="num_outputslots" type="long" place="num_outputslots"/>
        <net>
          <place name="file_with_config" type="string"/>
          <place name="config" type="config"/>
          <place name="wait" type="long"/>
          <place name="interval_size" type="long"/>
          <place name="num_outputslots" type="long"/>

          <transition name="read_config" inline="true">
	    <defun>
	      <in name="filename" type="string"/>
	      <out name="config" type="config"/>
	      <module name="ufbmig_calc" function="read_config (filename, config)">
		<cinclude href="fhglog/fhglog.hpp"/>
		<cinclude href="util/rw.hpp"/>
		<cinclude href="plugins/progress.h"/>
		<code><![CDATA[
		MLOG (INFO, "reading config from file " << filename);

		::ufbmig::util::serialize::read (filename, config);

//		progress_reset ("ufbmig", "migrate", config.num.package);
		]]></code>
	      </module>
	    </defun>
	    <connect-in port="filename" place="file_with_config"/>
	    <connect-out port="config" place="config_read"/>
          </transition>

          <place name="config_read" type="config"/>

          <transition name="init">
            <defun>
              <in name="config" type="config"/>
              <out name="config" type="config"/>
              <out name="interval_size" type="long"/>
              <out name="num_outputslots" type="long"/>
              <out name="wait" type="long"/>
              <expression>
                ${interval_size} := ${config.size.interval};
                ${wait} := ${config.num.package};
                ${num_outputslots} := ${config.num.nodes};
              </expression>
            </defun>
            <connect-in port="config" place="config_read"/>
            <connect-out port="interval_size" place="interval_size"/>
            <connect-out port="num_outputslots" place="num_outputslots"/>
            <connect-out port="wait" place="wait"/>
            <connect-out port="config" place="config"/>
          </transition>
        </net>
      </defun>
      <connect-in port="file_with_config" place="file_with_config"/>
      <connect-out port="config" place="config"/>
      <connect-out port="wait" place="wait"/>
      <connect-out port="interval_size" place="interval_size"/>
      <connect-out port="num_outputslots" place="num_outputslots"/>
    </transition>

    <include-template href="lib/4.xml"/>
    <specialize name="scatter_config" use="quad">
      <type-map replace="T" with="config"/>
    </specialize>

    <transition name="scatter_config" inline="true">
      <use name="scatter_config"/>
      <connect-in port="in" place="config"/>
      <connect-out port="one" place="config_read"/>
      <connect-out port="two" place="config_generate_interval"/>
      <connect-out port="three" place="config_generate_store"/>
      <connect-out port="four" place="config_generate_package"/>
    </transition>

    <place name="config_read" type="config"/>
    <place name="config_generate_interval" type="config"/>
    <place name="config_generate_store" type="config"/>
    <place name="config_generate_package" type="config"/>

    <transition name="generate_outputslots" inline="true">
      <include-function href="lib/sequence.xml"/>
      <connect-in port="amount" place="num_outputslots"/>
      <connect-out port="out" place="output"/>
    </transition>

    <place name="num_outputslots" type="long"/>
    <place name="output" type="long"/>

    <place name="done_update" type="control"/>
    <place name="wait" type="long"/>

    <place name="trigger_interval" type="control"/>

    <transition name="generate_interval" inline="true">
      <include-function href="interval/generate.xml"/>
      <place-map virtual="trigger" real="trigger_interval"/>
      <connect-in port="config" place="config_generate_interval"/>
      <connect-out port="interval" place="empty_interval"/>
    </transition>

    <place name="empty_interval" type="interval"/>

    <place name="empty_store" type="store"/>
    <place name="assigned_package" type="assigned_package"/>

    <place name="trigger_store" type="control"/>

    <transition name="generate_store" inline="true">
      <include-function href="store/generate.xml"/>
      <place-map virtual="trigger" real="trigger_store"/>
      <connect-in port="config" place="config_generate_store"/>
      <connect-out port="store" place="empty_store"/>
    </transition>

    <transition name="generate_package" inline="true">
      <include-function href="package/generate.xml"/>
      <place-map virtual="trigger" real="trigger_store"/>
      <place-map virtual="store" real="empty_store"/>
      <connect-in port="config" place="config_generate_package"/>
      <connect-out port="assigned_package" place="assigned_package"/>
    </transition>

    <transition name="load" inline="true">
      <include-function href="load.xml"/>
      <connect-in port="assigned_package" place="assigned_package"/>
      <connect-out port="assigned_package" place="loaded_package"/>
      <connect-out port="trigger" place="trigger_interval"/>
      <place-map virtual="config" real="config_read"/>
    </transition>

    <place name="loaded_package" type="assigned_package"/>

    <transition name="calculate" inline="true">
      <include-function href="calculate.xml"/>
      <connect-in port="empty_interval" place="empty_interval"/>
      <connect-in port="loaded_package" place="loaded_package"/>
      <connect-out port="processed_interval" place="processed_interval"/>
      <connect-out port="empty_store" place="empty_store"/>
      <place-map virtual="config" real="config_read"/>
      <place-map virtual="trigger_interval" real="trigger_interval"/>
      <place-map virtual="wait" real="wait"/>
    </transition>

    <place name="processed_interval" type="interval"/>

    <transition name="update" inline="true">
      <include-function href="update.xml"/>
      <connect-in port="processed_interval" place="processed_interval"/>
      <connect-out port="empty_interval" place="empty_interval"/>
      <connect-out port="done_update" place="done_update"/>
      <place-map virtual="wait" real="wait"/>
      <place-map virtual="config" real="config_read"/>
      <place-map virtual="interval_size" real="interval_size"/>
      <place-map virtual="output" real="output"/>
    </transition>

    <place name="interval_size" type="long"/>

    <transition name="finalize">
      <defun>
        <in name="done" type="control" place="done_update"/>
        <out name="done" type="control" place="done"/>
        <tunnel name="config" type="config" place="config"/>
        <net>
          <place name="config" type="config" virtual="true"/>
          <place name="done_update" type="control"/>
          <place name="done" type="control"/>
          <transition name="finalize">
            <defun>
              <in name="config" type="config"/>
              <in name="done" type="control"/>
              <out name="done" type="control"/>
              <module name="ufbmig_calc" function="done finalize_calc (config)">
                <cinclude href="fhglog/fhglog.hpp"/>
		<cinclude href="plugins/progress.h" />
                <code><![CDATA[
                  LOG (INFO, "FINALIZE " << config);

//                  progress_finalize ("ufbmig");

                  return control();
                ]]></code>
              </module>
            </defun>
            <connect-in port="config" place="config"/>
            <connect-in port="done" place="done_update"/>
            <connect-out port="done" place="done"/>
          </transition>
        </net>
      </defun>
      <connect-in port="done" place="done_update"/>
      <connect-out port="done" place="done"/>
      <place-map virtual="config" real="config_read"/>
    </transition>

  </net>

</defun>
