<defun>
  <in name="N" type="long" place="Nin"/>
  <in name="config" type="config" place="config"/>
  <in name="trigger" type="long" place="id"/>
  <out name="done" type="control" place="out"/>

  <net>
    <place name="Nin" type="long"/>

    <include-template href="dup.xml"/>
    <specialize name="dup_long" use="dup">
      <type-map replace="T" with="long"/>
    </specialize>
    <transition name="dup" inline="true">
      <use name="dup_long"/>
      <connect-in port="in" place="Nin"/>
      <connect-out port="one" place="N"/>
      <connect-out port="two" place="wait"/>
    </transition>

    <place name="id" type="long"/>
    <place name="N" type="long"/>
    <place name="wait" type="long"/>
    <place name="pending" type="long"/>
    <place name="config" type="config"/>
    <place name="done" type="control"/>
    <place name="out" type="control"/>

    <transition name="generate" inline="true">
      <include-function href="sequence.xml"/>
      <connect-in place="N" port="amount"/>
      <connect-out port="out" place="pending"/>
    </transition>

    <transition name="run">
      <defun>
        <in name="id" type="long"/>
        <in name="i" type="long"/>
        <in name="config" type="config"/>
        <out name="done" type="control"/>
        <module name="stresstest" function="run"/>
      </defun>
      <connect-in port="i" place="pending"/>
      <connect-read port="id" place="id"/>
      <connect-read port="config" place="config"/>
      <connect-out port="done" place="done"/>
    </transition>

    <transition name="dec" priority="1">
      <defun>
        <in name="trigger" type="control"/>
        <in name="wait" type="long"/>
        <out name="wait" type="long"/>
        <expression>
          ${wait} := ${wait} - 1
        </expression>
        <condition>${wait} :gt: 0</condition>
      </defun>
      <connect-in port="trigger" place="done"/>
      <connect-in port="wait" place="wait"/>
      <connect-out port="wait" place="wait"/>
    </transition>
    
    <transition name="done">
      <defun>
        <in name="wait" type="long"/>
        <in name="config" type="config"/>
        <in name="id" type="long"/>
        <out name="done" type="control"/>
        <expression>
          ${done} := []
        </expression>
        <condition>${wait} :eq: 0</condition>
      </defun>
      <connect-in port="wait" place="wait"/>
       <connect-in port="config" place="config"/>
       <connect-in port="id" place="id"/>
      <connect-out port="done" place="out"/>
    </transition>
  </net>
</defun>
