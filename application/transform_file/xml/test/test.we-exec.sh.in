# mirko.rahn@itwm.fraunhofer.de

source "@CMAKE_BINARY_DIR@/test/env.sh"
source "@CMAKE_BINARY_DIR@/test/dir_build.sh"
source "@CMAKE_BINARY_DIR@/test/measured.sh"

DIR_TEST="@CMAKE_CURRENT_SOURCE_DIR@"

DIR_SOURCE="${DIR_TEST}/.."
RESULT="$(mktemp --tmpdir="${DIR_BUILD}")"
INPUT="$(mktemp --tmpdir="${DIR_BUILD}")"
COMPARE="$(mktemp --tmpdir="${DIR_BUILD}")"
OUTPUT="$(mktemp --tmpdir="${DIR_BUILD}")"

OUT="${DIR_BUILD}/transform_file.out"

GENERATOR="@CMAKE_CURRENT_BINARY_DIR@/transform_file_generator"

test -x "${GENERATOR}"                                      || die $EX_ERR_ENV

make=( make )
make+=( -f "${SDPA_HOME}/share/sdpa/make/common.mk" )
make+=( MAIN=transform_file )
make+=( BUILDDIR="${DIR_BUILD}" )
make+=( WE_EXEC_OUTPUT="${RESULT}" )
make+=( WE_EXEC_LOAD="${SDPA_HOME}/libexec/sdpa/fake/libfvm-pc.so" )
make+=( 'PUT_PORT=input_file=\\\"${INPUT}\\\"\ output_file=\\\"${OUTPUT}\\\"\ chunk_size=1048576L\ input_n_read_slots=20L\ input_n_write_slots=20L' )
make+=( CXXINCLUDEPATHS="${DIR_SOURCE}/.." )
make+=( CXXLIBRARYPATHS="${SDPA_HOME}/lib" )
make+=( -C "${DIR_SOURCE}" )

cleanup()
{
  rm -f "${INPUT}"
  rm -f "${COMPARE}"
  rm -f "${OUTPUT}"
  rm -f "${RESULT}"
  eval ${make[@]} clean
  cleanup_dir_build
}

trap 'cleanup' EXIT

measured "generate" '${GENERATOR} $((2**27)) > "${INPUT}" 2> "${COMPARE}"'   \
                                                            || die $EX_ERR_RUN
measured "build-wrapper" ${make[@]} lib                     || die $EX_ERR_RUN
measured "run" WE_EXEC_WORKER=1 ${make[@]} run              || die $EX_ERR_RUN

grep -q 'finished \[1\]' "${OUT}"                           || die $EX_ERR_RES

test "$(pnetget -i "${RESULT}" -p done)" = "[]"             || die $EX_ERR_RES

ls -l "${DIR_BUILD}"

diff -q "${COMPARE}" "${OUTPUT}"                            || die $EX_ERR_RES

rm -f "${INPUT}"                                         || die $EX_ERR_CLEANUP
rm -f "${COMPARE}"                                       || die $EX_ERR_CLEANUP
rm -f "${OUTPUT}"                                        || die $EX_ERR_CLEANUP
rm -f "${RESULT}"                                        || die $EX_ERR_CLEANUP
measured "clean" ${make[@]} clean                        || die $EX_ERR_CLEANUP
cleanup_dir_build                                        || die $EX_ERR_CLEANUP

trap - EXIT
