#!/bin/bash

#stack_dir="@PARSU_STACK_DIR@"
stack_dir=$(dirname $(dirname $(which "$0")))/stack

tmp_dir=${PARSU_TMP_DIR:-${TMPDIR}}

if [ ! -d "${tmp_dir}" -a -w "${tmp_dir}" ] ; then
  echo "E: no (writeable) temp dir given (is: \"${tmp_dir}\")"
  echo "set PARSU_TMP_DIR or TMPDIR"
  exit 1
fi

xml_file_in="${stack_dir}/stack.xml.in"
mk_xml="${stack_dir}/mk.xml"

cleanup ()
{
    test -e "${xml_file}"  && rm -f "${xml_file}"
    test -e "${pnet_file}" && rm -f "${pnet_file}"
}
trap cleanup EXIT

xml_file=$( mktemp "${tmp_dir}/parsu_stack.xml.XXXXXX" )
if [ $? -ne 0 ] ; then
  echo "could not create temporary file in ${tmp_dir}" >/dev/stderr
  exit 2
fi

pnet_file=$( mktemp "${tmp_dir}/parsu_stack.pnet.XXXXXX" )
if [ $? -ne 0 ] ; then
  echo "could not create temporary file in ${tmp_dir}" >/dev/stderr
  exit 2
fi

shmem_per_node_default=$((2**28))
gpi_mem_per_node_default=$((2**30))

if [ $# -lt 5 ]; then
  echo "usage: $0 input-file input-type output-file output-type key [shmem-per-node:${shmem_per_node_default}] [gpi-mem-per-node:${gpi_mem_per_node_default}]"
  exit 1
fi

inf=${1}
int=${2}
outf=${3}
outt=${4}
key=${5}
shmem_per_node=${6:-${shmem_per_node_default}}
gpi_mem_per_node=${7:-${gpi_mem_per_node_default}}

if [ ! -r "$inf" ] ; then
  echo "E: cannot access $inf for reading, aborting" >/dev/stderr
  exit 1
fi

if [ -e "$outf" ] ; then
    echo "W: deleting old output file" >/dev/stderr
    rm "$outf"
fi

abspath ()
{
  p="$1"
  case "$p" in
        /*)
          REPLY="$p"
          ;;
        *)
          REPLY="`pwd`/$p"
          ;;
  esac
  return 0
}

abspath ${inf}
abs_inf="$REPLY"

abspath ${outf}
abs_outf="$REPLY"

echo -n "-: generating job description..." >/dev/stderr

cat "${xml_file_in}" | ${mk_xml}             \
                       "${abs_inf}"          \
                       "${int}"              \
                       "${abs_outf}"         \
                       "${outt}"             \
                       "${key}"              \
                       "${shmem_per_node}"   \
                       "${gpi_mem_per_node}" \
                       "--BUILD--"           \
                     > "${xml_file}"

if [ $? -ne 0 ] ; then
  echo "E: generating failed!" >/dev/stderr
  exit 2
fi
echo "ok" >/dev/stderr

PARSU_PNETC_LIB_DIR="${stack_dir} -I @PARSU_PNETC_LIB_DIR@" \
parsu_run "${xml_file}" "${pnet_file}"
