# mirko.rahn@itwm.fraunhofer.de

EX_ERR_ENV=255
EX_ERR_RUN=1
EX_ERR_RES=2
EX_ERR_OTHER=3

print_measurement()
{
  echo "<DartMeasurement name=\"$1\" type=\"$2\">$3</DartMeasurement>"
}

print_fail_reason()
{
  print_measurement "fail_reason" "text/string" $1
}

die()
{
  case $1 in
      $EX_ERR_ENV)
          print_fail_reason "EX_ERR_ENV"
          ;;
      $EX_ERR_RUN)
          print_fail_reason "EX_ERR_RUN"
          ;;
      $EX_ERR_RES)
          print_fail_reason "EX_ERR_RES"
          ;;
      $EX_ERR_OTHER)
          print_fail_reason "EX_ERR_OTHER"
          ;;
      *)
          print_fail_reason "UNKNOWN"
          ;;
  esac

  exit $1
}

measured()
{
  local name=$1; shift

  local time_start=($(date +'%s %N'))
  eval $@; local ec=$?
  local time_end=($(date +'%s %N'))

  time_end[1]=$(echo "${time_end[1]}" | sed 's/^0*//')
  time_start[1]=$(echo "${time_start[1]}" | sed 's/^0*//')

  local msec_start=$((${time_start[1]} / 1000000))
  local msec_end=$((${time_end[1]} / 1000000))

  local secs=$((${time_end[0]} - ${time_start[0]}))
  local msec=$((1000 * secs + msec_end - msec_start))

  print_measurement                                            \
    $name                                                      \
    "numeric/float"                                            \
    $(echo "scale=4; $msec/1000" | bc | sed 's/0*$//;s/^\./0./')

  return $ec
}

export SDPA_HOME="@CMAKE_INSTALL_PREFIX@"

SDPA_ENV="${SDPA_HOME}/etc/sdpa/sdpa.env"

test -r "${SDPA_ENV}"                                       || die $EX_ERR_ENV

source "${SDPA_ENV}"

export BOOST_ROOT="@BOOST_ROOT@"
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:"@BOOST_ROOT@/lib"

test -n "${BOOST_ROOT}"                                     || die $EX_ERR_ENV
