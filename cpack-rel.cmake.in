set(CPACK_CMAKE_GENERATOR "Unix Makefiles")
set(CPACK_GENERATOR "TBZ2")

if (${CMAKE_BUILD_TYPE} MATCHES "Debug")
     set(CPACK_PACKAGE_NAME "gspc-dbg")
else (${CMAKE_BUILD_TYPE} MATCHES "Debug")
     set(CPACK_PACKAGE_NAME "gspc")
endif (${CMAKE_BUILD_TYPE} MATCHES "Debug")

set(CPACK_STRIP_FILES ON)
set(CPACK_PACKAGE_VENDOR "@PROJECT_VENDOR@")
set(CPACK_PACKAGE_DESCRIPTION "@PROJECT_DESCRIPTION@")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "@PROJECT_DESCRIPTION_SUMMARY@")
set(CPACK_PACKAGE_VERSION "@PROJECT_VERSION@")
set(CPACK_PACKAGE_VERSION_MAJOR "@V_MAJOR@")
set(CPACK_PACKAGE_VERSION_MINOR "@V_MINOR@")
set(CPACK_PACKAGE_VERSION_PATCH "@V_PATCH@")
set(CPACK_PACKAGE_CONTACT "@PROJECT_CONTACT@")
set(CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${CPACK_PACKAGE_VERSION}")
set(CPACK_PACKAGE_INSTALL_DIRECTORY "GSPC Install")

set(CPACK_COMPONENTS_ALL_GROUPS_IN_ONE_PACKAGE 1)

set(CPACK_COMPONENTS_ALL
  runtime
  libraries
  plugins
  fhglog-headers
  module-headers
  cmake-scripts
  headers
  documentation
  configurations
  modules
  applications
  examples
  dependencies
)

# component display names
set(CPACK_COMPONENT_RUNTIME_DISPLAY_NAME "Runtime")
set(CPACK_COMPONENT_LIBRARIES_DISPLAY_NAME "Libraries")
set(CPACK_COMPONENT_PLUGINS_DISPLAY_NAME "Plugins")
set(CPACK_COMPONENT_HEADERS_DISPLAY_NAME "C++ Headers")
set(CPACK_COMPONENT_DOCUMENTATION_DISPLAY_NAME "Documentation")
set(CPACK_COMPONENT_CONFIGURATIONS_DISPLAY_NAME "Example configuration files")
set(CPACK_COMPONENT_MODULES_DISPLAY_NAME "Example modules")
set(CPACK_COMPONENT_APPLICATIONS_DISPLAY_NAME "Applications")
set(CPACK_COMPONENT_EXAMPLES_DISPLAY_NAME "Example XML descriptions")
set(CPACK_COMPONENT_DEPENDENCIES_DISPLAY_NAME "Dependencies (libraries)")

# comonent dependencies
set(CPACK_COMPONENT_HEADERS_DEPENDS libraries)
set(CPACK_COMPONENT_EXAMPLES_DEPENDS runtime modules)
set(CPACK_COMPONENT_DEPENDENCIES_DEPENDS runtime libraries plugins)

# component descriptions
set(CPACK_COMPONENT_RUNTIME_DESCRIPTION "SDPA runtime programs")
set(CPACK_COMPONENT_LIBRARIES_DESCRIPTION "Static libraries used to build programs with SDPA")
set(CPACK_COMPONENT_PLUGINS_DESCRIPTION "SDPA plugins")
set(CPACK_COMPONENT_HEADERS_DESCRIPTION "C/C++ header files for use with SDPA")
set(CPACK_COMPONENT_DOCUMENTATION_DESCRIPTION "Documentation files")
set(CPACK_COMPONENT_CONFIGURATIONS_DESCRIPTION "Configuration files")
set(CPACK_COMPONENT_MODULES_DESCRIPTION "Example modules")
set(CPACK_COMPONENT_APPLICATIONS_DESCRIPTION "Example applications")
set(CPACK_COMPONENT_EXAMPLES_DESCRIPTION "Example programs")
set(CPACK_COMPONENT_DEPENDENCIES_DESCRIPTION "Dependencies (libraries)")

# component groups
set(CPACK_COMPONENT_RUNTIME_GROUP "SDPA")
set(CPACK_COMPONENT_LIBRARIES_GROUP "Development")
set(CPACK_COMPONENT_PLUGINS_GROUP "SDPA")
set(CPACK_COMPONENT_HEADERS_GROUP "Development")
set(CPACK_COMPONENT_DOCUMENTATION_GROUP "SDPA")
set(CPACK_COMPONENT_CONFIGURATIONS_GROUP "SDPA")
set(CPACK_COMPONENT_MODULES_GROUP "Examples")
set(CPACK_COMPONENT_APPLICATIONS_GROUP "Applications")
set(CPACK_COMPONENT_EXAMPLES_GROUP "Examples")
set(CPACK_COMPONENT_DEPENDENCIES_GROUP "SDPA")

# group descriptions
set(CPACK_COMPONENT_GROUP_RUNTIME_DESCRIPTION "The SDPA runtime system")
set(CPACK_COMPONENT_GROUP_DEVELOPMENT_DESCRIPTION "All of the files you'll need to develop software for SDPA")
set(CPACK_COMPONENT_GROUP_EXAMPLES_DESCRIPTION "Example applications")

set(COMPONENTS_TO_INSTALL
  runtime
  runtime-libraries
  plugins
  runtime-headers
  module-headers
  documentation
  configurations
  modules
  applications
  examples
  dependencies
  sdk
)
set(CPACK_INSTALL_CMAKE_PROJECTS "")
foreach (comp ${COMPONENTS_TO_INSTALL})
  set(CPACK_INSTALL_CMAKE_PROJECTS "${CPACK_INSTALL_CMAKE_PROJECTS};@sdpa_main_BINARY_DIR@;${comp};${comp};/")
endforeach ()
