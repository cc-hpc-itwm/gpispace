<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2020 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<template name="wait">
  <template-parameter type="T"/>
  <defun>
    <in name="object" type="T" place="object"/>
    <out name="done" type="control" place="done"/>
    <tunnel name="num" type="long" place="num"/>

    <net>

      <place name="object" type="T"/>
      <place name="num" type="long" virtual="true"/>
      <place name="done" type="control"/>

      <transition name="dec">
        <defun>
          <in name="object" type="T"/>
          <inout name="num" type="long"/>
          <expression>
            ${num} := ${num} - 1L
          </expression>
        </defun>
        <condition>
          ${num} :gt: 0L
        </condition>
        <connect-in port="object" place="object"/>
        <connect-inout port="num" place="num"/>
      </transition>

      <transition name="done">
        <defun>
          <in name="num" type="long"/>
          <out name="done" type="control"/>
          <expression>
            ${done} := []
          </expression>
        </defun>
        <condition>
          ${num} :le: 0L
        </condition>
        <connect-in port="num" place="num"/>
        <connect-out port="done" place="done"/>
      </transition>

    </net>
  </defun>
</template>
