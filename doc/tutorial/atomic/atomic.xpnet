<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2021 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<defun name="atomic">
  <in name="number_of_updates" type="unsigned long"
      place="number_of_updates"/>
  <in name="initial_value" type="long" place="value"/>
  <out name="final_value" type="long" place="value"/>
  <net>
    <place name="number_of_updates" type="unsigned long"/>
    <place name="value" type="long"/>
    <transition name="update_A">
      <defun>
        <inout name="value" type="long"/>
        <inout name="number_of_updates" type="unsigned long"/>
        <expression>
          ${value} := ${value} + 1L;
          ${number_of_updates} := ${number_of_updates} - 1UL
        </expression>
        <condition>
          ${number_of_updates} :gt: 0UL
        </condition>
      </defun>
      <connect-inout port="value" place="value"/>
      <connect-inout port="number_of_updates" place="number_of_updates"/>
    </transition>
    <transition name="update_B">
      <defun>
        <inout name="value" type="long"/>
        <inout name="number_of_updates" type="unsigned long"/>
        <expression>
          ${value} := ${value} + 1L;
          ${number_of_updates} := ${number_of_updates} - 1UL
        </expression>
        <condition>
          ${number_of_updates} :gt: 0UL
        </condition>
      </defun>
      <connect-inout port="value" place="value"/>
      <connect-inout port="number_of_updates" place="number_of_updates"/>
    </transition>
  </net>
</defun>
