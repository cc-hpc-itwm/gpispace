# mirko.rahn@itwm.fraunhofer.de

source "@CMAKE_BINARY_DIR@/test/env.sh"
source "@CMAKE_BINARY_DIR@/test/dir_build.sh"
source "@CMAKE_BINARY_DIR@/test/measured.sh"

DIR_TEST="@CMAKE_CURRENT_SOURCE_DIR@"

DIR_SOURCE="${DIR_TEST}/.."

OUT="${DIR_BUILD}/n_of_m.out"
CMP="${DIR_BUILD}/run.out"
CMP_ORIG="${DIR_TEST}/out.cmp"
RESULT="$(mktemp --tmpdir="${DIR_BUILD}")"

make+=()
make+=( make BUILDDIR="${DIR_BUILD}" )
make+=( WE_EXEC_OUTPUT="${RESULT}" )
make+=( -C "${DIR_SOURCE}" )

cleanup()
{
  rm -rf "${CMP}"
  rm -f "${RESULT}"
  eval ${make[@]} clean
  cleanup_dir_build
}

trap 'cleanup' EXIT

measured "build-wrapper" ${make[@]} lib                     || die $EX_ERR_RUN
measured "run" WE_EXEC_WORKER=1 ${make[@]} run              || die $EX_ERR_RUN

grep -q 'finished \[1\]' "${OUT}"                           || die $EX_ERR_RES
test "$(pnetget -i "${RESULT}" -p done)" == "[]"            || die $EX_ERR_RES
cat "${OUT}" | grep ^\# | sort -n -k +3 > "${CMP}"          || die $EX_ERR_OTHER
diff "${CMP}" "${CMP_ORIG}"                                 || die $EX_ERR_RES
