<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2020 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<defun name="n_of_m">

  <struct name="config">
    <field name="description" type="string"/>
  </struct>

  <in name="n" type="long" place="n"/>
  <in name="c" type="long" place="c"/>
  <in name="config" type="config" place="config"/>
  <out name="done" type="control" place="done"/>

  <net>

    <place name="n" type="long"/>
    <place name="c" type="long"/>
    <place name="done" type="control"/>

    <transition name="generate_credit" inline="true">
      <include-function href="sequence/sequence_forward.xpnet"/>
      <connect-in port="n" place="c"/>
      <connect-out port="i" place="credit"/>
    </transition>

    <place name="credit" type="long"/>

    <include-template href="template/three.xpnet"/>
    <specialize name="scatter_long" use="three">
      <type-map replace="T" with="long"/>
    </specialize>

    <place name="n_generate" type="long"/>
    <place name="n_wait" type="long"/>
    <place name="n_work" type="long"/>

    <transition name="scatter">
      <use name="scatter_long"/>
      <connect-in port="x" place="n"/>
      <connect-out port="a" place="n_generate"/>
      <connect-out port="b" place="n_wait"/>
      <connect-out port="c" place="n_work"/>
    </transition>

    <include-template href="credit/sequence_forward_credit.xpnet"/>
    <specialize name="sequence_forward_credit_long"
                use="sequence_forward_credit"
    >
      <type-map replace="T" with="long"/>
      <type-map replace="WITH_CREDIT" with="long_with_credit"/>
      <type-get name="long_with_credit"/>
    </specialize>

    <transition name="generate_work" inline="true">
      <use name="sequence_forward_credit_long"/>
      <connect-in port="n" place="n_generate"/>
      <connect-out port="i" place="i_with_credit"/>
      <place-map virtual="credit" real="credit"/>
    </transition>

    <place name="i_with_credit" type="long_with_credit"/>
    <place name="o_with_credit" type="long_with_credit"/>

    <place name="config" type="config"/>

    <include-template href="work.xpnet"/>
    <specialize name="work_config" use="work_n_of_m">
      <type-map replace="T" with="config"/>
    </specialize>

    <transition name="work" inline="true">
      <use name="work_config"/>
      <connect-in port="i" place="i_with_credit"/>
      <connect-out port="o" place="o_with_credit"/>
      <place-map virtual="n" real="n_work"/>
      <place-map virtual="config" real="config"/>
    </transition>

    <transition name="credit_back">
      <defun>
        <in name="with_credit" type="long_with_credit"/>
        <out name="credit" type="long"/>
        <out name="id" type="long"/>
        <expression>
          ${id} := ${with_credit.id};
          ${credit} := ${with_credit.credit};
        </expression>
      </defun>
      <connect-in port="with_credit" place="o_with_credit"/>
      <connect-out port="credit" place="credit"/>
      <connect-out port="id" place="o"/>
    </transition>

    <place name="o" type="long"/>

    <include-template href="virtual/wait.xpnet"/>
    <specialize name="wait_long" use="wait">
      <type-map replace="T" with="long"/>
    </specialize>

    <transition name="wait" inline="true">
      <use name="wait_long"/>
      <connect-in port="object" place="o"/>
      <connect-out port="done" place="done"/>
      <place-map virtual="num" real="n_wait"/>
    </transition>

  </net>

</defun>
