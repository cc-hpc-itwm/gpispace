<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2020 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<defun name="work">

  <in name="i" type="long" place="i"/>
  <out name="o" type="long" place="o"/>

  <net>

    <place name="i" type="long"/>
    <place name="o" type="long"/>

    <transition name="step_1">
      <defun>
        <inout name="v" type="long"/>
        <module name="work" function="step_1 (v)">
          <cinclude href="iostream"/>
          <code><![CDATA[
            std::cout << "### step-1 " << v << std::endl;
          ]]></code>
        </module>
      </defun>
      <connect-in port="v" place="i"/>
      <connect-out port="v" place="s1"/>
    </transition>

    <place name="s1" type="long"/>

    <transition name="step_2">
      <defun>
        <inout name="v" type="long"/>
        <module name="work" function="step_2 (v)">
          <cinclude href="iostream"/>
          <code><![CDATA[
            std::cout << "### step-2 " << v << std::endl;
          ]]></code>
        </module>
      </defun>
      <connect-in port="v" place="s1"/>
      <connect-out port="v" place="o"/>
    </transition>

  </net>

</defun>
