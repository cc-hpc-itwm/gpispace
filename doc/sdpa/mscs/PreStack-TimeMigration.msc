# MSC for the prestack timemigration algorithm using the SDPA.
#
#
msc {
  hscale = "2.0";

  User,Orch,Sched_o,GWES_o,Agg,Sched_a,GWES_a,NRE_1,NRE_2;

    |||;
    User box NRE_2 [ label = "PreStack Time Migration execution (no failures)" ];
    |||;

    --- [ label = "Job submission" ];

    User->Orch [ label = "submit(Workflow)" ];
        Orch=>Orch [ label = "job_id = registerNewJob(Workflow)" ];
    Orch->User [ label = "submitAck(job-id = \"1\")" ];
    Orch=>GWES_o [ label = "init(Workflow); start()" ];
    Agg->Orch [ label = "lifeSign", ID="*" ];

    --- [ label = "* = lifeSigns are sent very seldom to keep the overhead low" ];

    Orch<<=GWES_o [ label = "list([1] = active_transitions)" ];
    NRE_1->Agg [ label = "lifeSign" ];
    Orch=>Sched_o [ label = "schedule([1])" ];
    Sched_o=>Orch [ label = "dispatch(1)" ];
    Orch->Agg [ label = "submit(Workflow, job-id=1)" ];
    NRE_2->Agg [ label = "lifeSign" ];

    |||;
    User abox NRE_2 [ label = "Execution on Aggregator begins" ];
    |||;

    Agg->Orch [ label = "submitAck(job-id=1)" ];

    NRE_1->Agg [ label = "poll()" ];
    Agg=>Sched_a [ label = "schedule(1)" ];
    NRE_2->Agg [ label = "poll()" ];
    Sched_a=>Agg [ label = "dispatch(1)" ];
    Agg=>GWES_a [ label = "init(1); start(1);" ];
    NRE_1->Agg [ label = "poll()" ];
    GWES_a=>>Agg [ label = "activitiesReady([1.1, 1.2, 1.3, ..., 1.102])", ID="*" ];
    --- [ label = "* = 1.1 represents createOutputGather, 1.2-1.102 represents calculateOffsetVolume activities, 100 OffsetClasses" ];
    Agg=>Sched_a [ label = "schedule(...)" ];
    --- [ label = "The scheduler fills in its internal schedule according to some not further defined scheme" ];
    NRE_1->Agg [ label = "poll()" ];
    Agg->NRE_1 [ label = "execute(1.1)" ];
    NRE_2->Agg [ label = "poll()" ];
    Agg->NRE_2 [ label = "execute(1.2)" ];
    ...;
    NRE_1->Agg [ label = "jobFinished(1.1, token=[MemoryToken(OutputGather,rw)])" ];
    --- [ label = "If we use a jobFinishedAck message, we can piggybag the next job" ];
    NRE_2->Agg [ label = "jobFinished(1.2, token=[MemoryToken(OffsetClass,ro), MemoryToken(OffsetVolume, local to node!)])"];
    GWES_a=>>Agg [ label = "activitiesReady([1.103])", ID="*" ];
    --- [ label = "* = 1.103 represents a 'store' Operation, those are available after the first calculate, the OffsetVolume-MemoryToken has to be taken into account!" ];
    ... [ label = "The previous steps are repeated until no more activities can be executed and all activities are finished" ];
    GWES_a=>>Agg [ label = "workflowFinished()" ];
    Agg=>Agg [ label = "jobFinished(1, [Token])" ];
    |||;
    User abox NRE_2 [ label = "Execution on Aggregator finished" ];
    |||;

    Agg->Orch [ label = "jobFinished(1, [Token])" ];

    User->Orch [ label = "queryStatus(1)" ];
    Orch->User [ label = "status(1, Finished)" ];
    User->Orch [ label = "getResults(1)" ];
    Orch->User [ label = "results(1, [Token])" ];
}
