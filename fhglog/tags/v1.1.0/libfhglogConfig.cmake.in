# -*- mode: cmake; -*-
# fhglogConfig.cmake is generated by CMake from @PROJECT_NAME@Config.cmake.in

# set the @PROJECT_NAME@ version number
set(@UPPER_PROJECT_NAME@_VERSION_MAJOR @V_MAJOR@)
set(@UPPER_PROJECT_NAME@_VERSION_MINOR @V_MINOR@)
set(@UPPER_PROJECT_NAME@_VERSION_PATCH @V_PATCH@)
set(@UPPER_PROJECT_NAME@_VERSION "${@UPPER_PROJECT_NAME@_VERSION_MAJOR}.${@UPPER_PROJECT_NAME@_VERSION_MINOR}.${@UPPER_PROJECT_NAME@_VERSION_PATCH}")

# set the directories
if(NOT @UPPER_PROJECT_NAME@_INSTALL_DIR)
  set(@UPPER_PROJECT_NAME@_INSTALL_DIR "@CMAKE_INSTALL_PREFIX@")
endif(NOT @UPPER_PROJECT_NAME@_INSTALL_DIR)

set(@UPPER_PROJECT_NAME@_INCLUDE_DIR  "@CMAKE_INCLUDE_DIR@")
set(@UPPER_PROJECT_NAME@_INCLUDE_DIRS "@CMAKE_INCLUDE_DIR@")
set(@UPPER_PROJECT_NAME@_LIB_DIR      "@CMAKE_LIBRARY_DIR@") 
set(@UPPER_PROJECT_NAME@_CONFIG_DIR   "@CMAKE_CONFIG_DIR@")

# the exports file exports
set(@UPPER_PROJECT_NAME@_TARGET_PREFIX @LIBFHGLOG_TARGET_PREFIX@) 

# configration settings

# add requirements here


# Make sure to load the exported targets only once
# For the rest of this script it doesn't matter that much
if(NOT TARGET @PROJECT_NAME@__kresources)
  get_filename_component(_currentDir "${CMAKE_CURRENT_LIST_FILE}" PATH)
  include("${_currentDir}/@PROJECT_NAME@Targets.cmake")
endif(NOT TARGET @PROJECT_NAME@__kresources)

# EOF
