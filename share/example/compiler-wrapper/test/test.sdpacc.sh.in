#!/bin/bash
# petry@itwm.fraunhofer.de

source "@CMAKE_CURRENT_BINARY_DIR@/env.sh"
source "@CMAKE_CURRENT_BINARY_DIR@/dir_build.sh"
source "@CMAKE_CURRENT_BINARY_DIR@/error.sh"
source "@CMAKE_CURRENT_BINARY_DIR@/die.sh"
source "@CMAKE_CURRENT_BINARY_DIR@/measured.sh"

DIR_STATE=$(mktemp -d -p "$HOME" test.gpispace.XXXXXXXX)    || die $EX_ERR_OTHER
echo "DIR_STATE = ${DIR_STATE}"                             || die $EX_ERR_OTHER

DIR_TEST="@CMAKE_CURRENT_SOURCE_DIR@"
DIR_INST="${DIR_BUILD}/inst"
DIR_SOURCE="${DIR_TEST}/.."
HOSTFILE="${DIR_BUILD}/hostfile"

make+=( make BUILDDIR="${DIR_BUILD}" )
make+=( DESTDIR="${DIR_INST}" )
make+=( -C "${DIR_SOURCE}")

cleanup()
{
  sdpa stop -s "${DIR_STATE}"
  rm -f "${HOSTFILE}"
  eval ${make[@]} uninstall
  eval ${make[@]} clean
  rm "${DIR_BUILD}/hello.gcc"
  rm "${DIR_BUILD}/hello.g++"
  rmdir "${DIR_INST}/modules" # can't automatically be deleted by 'moduninstall'
  rmdir "${DIR_INST}"
  cleanup_dir_build
  rm -rf "${DIR_STATE}"
}

trap 'cleanup' EXIT

measured "build-wrapper" ${make[@]}                         || die $EX_ERR_RUN
measured "install" ${make[@]} install                       || die $EX_ERR_RUN

hostname > "${HOSTFILE}"                                    || die $EX_ERR_RUN

measured "boot" sdpa boot -s "${DIR_STATE}" -A "${DIR_INST}/modules" -M -f "${HOSTFILE}" worker:1      \
                                                            || die $EX_ERR_BOOT

SDPA_STATE_DIR="${DIR_STATE}" measured "submit"             \
  "${DIR_INST}/bin/sdpacc.gcc" -o "${DIR_BUILD}/hello.gcc"  \
  "${DIR_INST}/src/hello.c"                                 || die $EX_ERR_RUN
SDPA_STATE_DIR="${DIR_STATE}" measured "submit"             \
  "${DIR_INST}/bin/sdpacc.g++" -o "${DIR_BUILD}/hello.g++"  \
  "${DIR_INST}/src/hello.c"                                 || die $EX_ERR_RUN

test -x "${DIR_BUILD}/hello.gcc"                                || die $EX_ERR_RES
test -x "${DIR_BUILD}/hello.g++"                                || die $EX_ERR_RES
actual_gcc=$("${DIR_BUILD}/hello.gcc")                          || die $EX_ERR_RUN
actual_gxx=$("${DIR_BUILD}/hello.g++")                          || die $EX_ERR_RUN

test "Hello World" = "$actual_gcc"                              || die $EX_ERR_RES
test "Hello World" = "$actual_gxx"                              || die $EX_ERR_RES

measured "stop" sdpa stop -s "${DIR_STATE}"                 || die $EX_ERR_STOP

rm "${HOSTFILE}"                                         || die $EX_ERR_CLEANUP
rm "${DIR_BUILD}/hello.gcc"                              || die $EX_ERR_CLEANUP
rm "${DIR_BUILD}/hello.g++"                              || die $EX_ERR_CLEANUP
measured "uninstall" ${make[@]} uninstall                || die $EX_ERR_CLEANUP
measured "clean" ${make[@]} clean                        || die $EX_ERR_CLEANUP
rmdir "${DIR_INST}/modules"                              || die $EX_ERR_CLEANUP
rmdir "${DIR_INST}"                                      || die $EX_ERR_CLEANUP
cleanup_dir_build                                        || die $EX_ERR_CLEANUP
rm -rf "${DIR_STATE}"                                    || die $EX_ERR_CLEANUP

trap '' EXIT
