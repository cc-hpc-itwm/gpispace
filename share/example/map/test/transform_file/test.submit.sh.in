# mirko.rahn@itwm.fraunhofer.de

set -euo pipefail

IMPLEMENTATION_SO=${1}
VERIFY=${2}
SETUP=${3}

source "@CMAKE_BINARY_DIR@/test/env.sh"
source "@CMAKE_BINARY_DIR@/test/dir_build.sh"
source "@CMAKE_BINARY_DIR@/test/dir_state.sh"
source "@CMAKE_BINARY_DIR@/test/measured.sh"

DIR_TEST="@CMAKE_CURRENT_SOURCE_DIR@"
DIR_SOURCE="${DIR_TEST}/../.."

DIR_INST="${DIR_STATE}/inst"
DIR_SDPA="${DIR_STATE}/sdpa"

mkdir -p "${DIR_INST}"                                      || die $EX_ERR_ENV

RESULT="${DIR_STATE}/result"
VMEM_SOCKET="/tmp/S-gpi-space.$(id -u)"

make=(make)
make+=( -f "${SDPA_HOME}/share/sdpa/make/common.mk" )
make+=( MAIN=map )
make+=( BUILDDIR="${DIR_BUILD}" )
make+=( LIB_DESTDIR="${DIR_INST}" )
make+=( WE_EXEC_OUTPUT="${RESULT}" )
make+=( CXXINCLUDEPATHS="${DIR_SOURCE}" )
make+=( 'PNETC_OPTS=--gen-cxxflags=--std=c++11' )
make+=( -C "${DIR_SOURCE}" )

source "${SETUP}"

# \note 8 communication buffers of size 4 MiB are allocated automatically
size_vmem=$((8*4*2**20 + size_input + size_output))

handle_input=
handle_output=

cleanup()
{
  set +e
  test -n "${handle_input}" && echo memory-free ${handle_input} | $SDPA_HOME/bin/gpish -s "${VMEM_SOCKET}"
  test -n "${handle_output}" && echo memory-free ${handle_output} | $SDPA_HOME/bin/gpish -s "${VMEM_SOCKET}"
  "${SDPA_HOME}/bin/sdpa" -s "${DIR_SDPA}" stop
  ${make[@]} uninstall
  rm -rf "${DIR_INST}/libmap-impl.so"
  rmdir "${DIR_INST}"
  ${make[@]} clean
  cleanup_dir_build
  rm -r "${RESULT}"
  cleanup_dir_state
}

trap cleanup EXIT

${make[@]} lib net install                                  || die $EX_ERR_RUN

hostname > "${DIR_STATE}/nodefile"                          || die $EX_ERR_ENV

"${SDPA_HOME}/bin/sdpa" boot \
  -S "${DIR_SDPA}" \
  -f "${DIR_STATE}/nodefile" \
  -x "${SDPA_HOME}/bin/gpi-space" \
  -A "${DIR_INST}" \
  -m "${size_vmem}" \
  work:2,$((2 * size_block))

handle_input=$(echo memory-alloc ${size_input} gpi input p | TERM=linux $SDPA_HOME/bin/gpish -s "${VMEM_SOCKET}" | tail -1)
handle_output=$(echo memory-alloc ${size_output} gpi output p | TERM=linux $SDPA_HOME/bin/gpish  -s "${VMEM_SOCKET}" | tail -1)

test -n "${handle_input}"                                  || die $EX_ERR_ALLOC
test -n "${handle_output}"                                 || die $EX_ERR_ALLOC

"${SDPA_HOME}/bin/pnetput" \
  -p input=Struct[handle:=Struct[name:=\"${handle_input}\"],offset:=0UL,size:=${size_input}UL] \
  -p output=Struct[handle:=Struct[name:=\"${handle_output}\"],offset:=0UL,size:=${size_output}UL] \
  -p num_block=${num_block}UL \
  -p size_block=${size_block}UL \
  -p user_data="${user_data}" \
  -p implementation=\"${IMPLEMENTATION_SO}\" \
  --if "${DIR_BUILD}/map.pnet" \
  | "${SDPA_HOME}/bin/sdpa" -s "${DIR_SDPA}" submit /dev/stdin "${RESULT}" \
                                                            || die $EX_ERR_RUN

test "$(pnetget -i "${RESULT}" -p done)" = "[]"             || die $EX_ERR_RES

source "${VERIFY}"
