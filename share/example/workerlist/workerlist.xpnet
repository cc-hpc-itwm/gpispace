<defun name="workerlist">
  <in name="trigger" type="control" place="trigger"/>
  <out name="workers" type="list" place="workers"/>
  <out name="hostnames" type="map" place="hostnames"/>

  <net>
    <place name="trigger" type="control"/>
    <place name="workers" type="list"/>
    <place name="hostnames" type="map"/>

    <transition name="run">
      <defun>
        <in name="trigger" type="control"/>
        <out name="workers" type="list"/>
        <out name="hostnames" type="map"/>
        <module name="workerlist" function="run (workers, hostnames)"
                pass_context="true">
          <ld flag="-lwe-dev" />
          <code><![CDATA[
            const std::list<std::string> wlist (_pnetc_context->worker_list());

            if (wlist.empty())
            {
              throw std::logic_error ("worker list is empty!");
            }

            workers.assign (wlist.begin(), wlist.end());

            for ( std::list<std::string>::const_iterator it (wlist.begin())
                ; it != wlist.end()
                ; ++it
                )
            {
              hostnames[*it] = _pnetc_context->worker_to_hostname (*it);
            }
          ]]></code>
        </module>
      </defun>
      <connect-in port="trigger" place="trigger"/>
      <connect-out port="workers" place="workers"/>
      <connect-out port="hostnames" place="hostnames"/>
    </transition>
  </net>
</defun>
