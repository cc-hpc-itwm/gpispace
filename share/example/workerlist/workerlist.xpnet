<defun name="workerlist">
  <in  name="trigger" type="control" place="trigger"/>
  <out name="workers" type="list" place="workers"/>
  <out name="hostnames" type="list" place="hostnames"/>

  <net>
    <place name="trigger" type="control"/>
    <place name="workers" type="list"/>
    <place name="hostnames" type="list"/>

    <transition name="run">
      <defun>
        <in  name="trigger" type="control"/>
        <out name="workers" type="list"/>
        <out name="hostnames" type="list"/>
        <module name="workerlist" function="run (workers, hostnames)"
                pass_context="true">
          <ld flag="-lwe-dev" />
          <code><![CDATA[
            std::list<std::string> wlist =
              _pnetc_context->worker_list ();

            if (wlist.empty())
            {
              throw std::runtime_error ("worker list is empty!");
            }
            else
            {
              workers.assign (wlist.begin(), wlist.end());

              std::list<std::string>::const_iterator it (wlist.begin());
              while (it != wlist.end())
              {
                hostnames.push_back (_pnetc_context->worker_to_hostname (*it));

                ++it;
              }
            }
          ]]></code>
        </module>
      </defun>
      <connect-in  port="trigger" place="trigger"/>
      <connect-out port="workers" place="workers"/>
      <connect-out port="hostnames" place="hostnames"/>
    </transition>
  </net>
</defun>
