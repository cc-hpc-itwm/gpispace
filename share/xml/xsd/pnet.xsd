<?xml version="1.0" encoding="UTF-8"?>

<!-- This file is part of GPI-Space.                                       -->
<!-- Copyright (C) 2021 Fraunhofer ITWM                                    -->
<!--                                                                       -->
<!-- This program is free software: you can redistribute it and/or modify  -->
<!-- it under the terms of the GNU General Public License as published by  -->
<!-- the Free Software Foundation, either version 3 of the License, or     -->
<!-- (at your option) any later version.                                   -->
<!--                                                                       -->
<!-- This program is distributed in the hope that it will be useful,       -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of        -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the          -->
<!-- GNU General Public License for more details.                          -->
<!--                                                                       -->
<!-- You should have received a copy of the GNU General Public License     -->
<!-- along with this program. If not, see <https://www.gnu.org/licenses/>. -->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema">

  <xsd:annotation>
    <xsd:documentation>
    petri nets with
      typed ports
      typed places
      typed tokens
      user defined types
      hierarchical structure
      hierarchical properties
    </xsd:documentation>
  </xsd:annotation>

  <xsd:element name="defun" type="function_type"/>
  <xsd:element name="props" type="property_map_list_type"/>
  <xsd:element name="structs" type="struct_list_type"/>
  <xsd:element name="template" type="template_type"/>

  <xsd:complexType name="transition_include_type">
    <xsd:attribute name="href" type="xsd:anyURI" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="struct_include_type">
    <xsd:attribute name="href" type="xsd:anyURI" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="function_include_type">
    <xsd:attribute name="href" type="xsd:anyURI" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="properties_include_type">
    <xsd:attribute name="href" type="xsd:anyURI" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="cinclude_type">
    <xsd:attribute name="href" type="xsd:anyURI" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="flag_type">
    <xsd:attribute name="flag" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="property_type">
    <xsd:simpleContent>
      <xsd:extension base="xsd:string">
        <xsd:attribute name="key" type="xsd:NCName" use="required"/>
        <xsd:attribute name="value" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>

  <xsd:complexType name="property_map_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="property" type="property_type"/>
      <xsd:element name="properties" type="property_map_type"/>
      <xsd:element name="include-properties" type="properties_include_type"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="property_map_list_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="properties" type="property_map_type"/>
      <xsd:element name="include-properties" type="properties_include_type"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="struct_list_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="struct" type="struct_type"/>
      <xsd:element name="include-structs" type="struct_include_type"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="struct_field_type">
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="type" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="struct_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="field" type="struct_field_type"/>
      <xsd:element name="struct" type="struct_type"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <!-- \todo make simple content to avoid
       <token><value>0</value></token> and allow just <token>0</token>
  -->
  <xsd:complexType name="token_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="value" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="mod_type">
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="1" name="eureka-group" type="xsd:string"/>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="cinclude" type="cinclude_type"/>
        <xsd:element name="ld" type="flag_type"/>
        <xsd:element name="cxx" type="flag_type"/>
      </xsd:choice>
      <xsd:element minOccurs="0" maxOccurs="1" name="code" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="function" type="xsd:string" use="required"/>
    <xsd:attribute name="eureka-group" type="xsd:string" use="optional"/>
    <xsd:attribute name="pass_context" type="xsd:boolean"
                   use="optional" default="false"/>
    <xsd:attribute name="require_function_unloads_without_rest"
                   type="xsd:boolean" use="optional" default="true"/>
    <xsd:attribute name="require_module_unloads_without_rest"
                   type="xsd:boolean" use="optional" default="true"/>
  </xsd:complexType>

  <xsd:complexType name="mod_type_with_target">
    <xsd:complexContent>
      <xsd:extension base="mod_type">
        <xsd:attribute name="target" type="xsd:string" use="required"/>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

  <xsd:complexType name="type_map_type">
    <xsd:attribute name="replace" type="xsd:NCName" use="required"/>
    <xsd:attribute name="with" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="type_get_type">
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="template_use_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="type-map" type="type_map_type"/>
      <xsd:element name="type-get" type="type_get_type"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="use" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="use_type">
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="require_type">
    <xsd:attribute name="key" type="xsd:string" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="template_parameter_type">
    <xsd:attribute name="type" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="place_type">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="properties" type="property_map_type"/>
        <xsd:element name="include-properties" type="properties_include_type"/>
      </xsd:choice>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="token" type="token_type"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="type" type="xsd:string" use="required"/>
    <xsd:attribute name="virtual" type="xsd:boolean" use="optional"
                   default="false"/>
    <xsd:attribute name="put_token" type="xsd:boolean" use="optional"
                   default="false"/>
  </xsd:complexType>

  <xsd:complexType name="port_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="properties" type="property_map_type"/>
      <xsd:element name="include-properties" type="properties_include_type"/>
    </xsd:choice>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="type" type="xsd:string" use="required"/>
    <xsd:attribute name="place" type="xsd:string" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="preferences_type">
    <xsd:choice minOccurs="1" maxOccurs="unbounded">
      <xsd:element name="target" type="xsd:string"/>
    </xsd:choice>
  </xsd:complexType>

  <xsd:complexType name="memory_buffer_type">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="properties" type="property_map_type"/>
        <xsd:element name="include-properties" type="properties_include_type"/>
      </xsd:choice>
      <xsd:element minOccurs="1" maxOccurs="1" name="size" type="xsd:string"/>
      <xsd:element minOccurs="0" maxOccurs="1" name="alignment" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="read-only" type="xsd:boolean" use="optional"
                   default="false"/>
  </xsd:complexType>

  <xsd:complexType name="memory_transfer_get_type">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="properties" type="property_map_type"/>
        <xsd:element name="include-properties" type="properties_include_type"/>
      </xsd:choice>
      <xsd:element minOccurs="1" maxOccurs="1" name="global" type="xsd:string"/>
      <xsd:element minOccurs="1" maxOccurs="1" name="local" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="allow-empty-ranges" type="xsd:boolean"
                   use="optional" default="false"/>
  </xsd:complexType>

  <xsd:complexType name="memory_transfer_put_type">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="properties" type="property_map_type"/>
        <xsd:element name="include-properties" type="properties_include_type"/>
      </xsd:choice>
      <xsd:element minOccurs="1" maxOccurs="1" name="global" type="xsd:string"/>
      <xsd:element minOccurs="1" maxOccurs="1" name="local" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="not-modified-in-module-call"
                   type="xsd:boolean" use="optional" default="false"/>
    <xsd:attribute name="allow-empty-ranges" type="xsd:boolean"
                   use="optional" default="false"/>
  </xsd:complexType>

  <xsd:complexType name="connect_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="properties" type="property_map_type"/>
      <xsd:element name="include-properties" type="properties_include_type"/>
    </xsd:choice>
    <xsd:attribute name="place" type="xsd:string" use="required"/>
    <xsd:attribute name="port" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="connect_response_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="properties" type="property_map_type"/>
      <xsd:element name="include-properties" type="properties_include_type"/>
    </xsd:choice>
    <xsd:attribute name="to" type="xsd:NCName" use="required"/>
    <xsd:attribute name="port" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="connect_eureka_type">
    <xsd:attribute name="port" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="place_map_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="properties" type="property_map_type"/>
      <xsd:element name="include-properties" type="properties_include_type"/>
    </xsd:choice>
    <xsd:attribute name="virtual" type="xsd:string" use="required"/>
    <xsd:attribute name="real" type="xsd:NCName" use="required"/>
  </xsd:complexType>

  <xsd:complexType name="template_type">
    <xsd:sequence>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="template-parameter" type="template_parameter_type"/>
      <xsd:element minOccurs="1" maxOccurs="1" name="defun" type="function_type"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:ID" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="modules_type">
    <xsd:sequence>
      <xsd:element name="preferences" type="preferences_type"/>
      <xsd:element minOccurs="1" maxOccurs="unbounded" name="module" type="mod_type_with_target"/>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="function_type">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="properties" type="property_map_type"/>
        <xsd:element name="include-properties" type="properties_include_type"/>
        <xsd:element name="require" type="require_type"/>
        <xsd:element name="struct" type="struct_type"/>
        <xsd:element name="include-structs" type="struct_include_type"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="in" type="port_type"/>
        <xsd:element name="out" type="port_type"/>
        <xsd:element name="inout" type="port_type"/>
        <xsd:element name="tunnel" type="port_type"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="memory-buffer" type="memory_buffer_type"/>
        <xsd:element name="memory-get" type="memory_transfer_get_type"/>
        <xsd:element name="memory-put" type="memory_transfer_put_type"/>
        <xsd:element name="memory-getput" type="memory_transfer_put_type"/>
      </xsd:choice>
      <xsd:choice>
        <xsd:element minOccurs="1" maxOccurs="1" name="expression" type="xsd:string"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="module" type="mod_type"/>
        <xsd:element name="modules" type="modules_type"/>
        <xsd:element minOccurs="1" maxOccurs="1" name="net" type="net_type"/>
      </xsd:choice>
      <xsd:element minOccurs="0" maxOccurs="unbounded" name="condition" type="xsd:string"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:NCName" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="transition_type">
    <xsd:sequence>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="properties" type="property_map_type"/>
        <xsd:element name="include-properties" type="properties_include_type"/>
        <xsd:element name="require" type="require_type"/>
      </xsd:choice>
      <xsd:choice minOccurs="1" maxOccurs="1">
        <xsd:element name="defun" type="function_type"/>
        <xsd:element name="include-function" type="transition_include_type"/>
        <xsd:element name="use" type="use_type"/>
      </xsd:choice>
      <xsd:choice minOccurs="0" maxOccurs="unbounded">
        <xsd:element name="connect-in" type="connect_type"/>
        <xsd:element name="connect-out" type="connect_type"/>
        <xsd:element name="connect-out-many" type="connect_type"/>
        <xsd:element name="connect-inout" type="connect_type"/>
        <xsd:element name="connect-read" type="connect_type"/>
        <xsd:element name="connect-response" type="connect_response_type"/>
        <xsd:element name="connect-eureka" type="connect_eureka_type"/>
        <xsd:element name="place-map" type="place_map_type"/>
        <xsd:element name="condition" type="xsd:string"/>
      </xsd:choice>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:NCName" use="required"/>
    <xsd:attribute name="priority" type="xsd:nonNegativeInteger" use="optional"/>
    <xsd:attribute name="inline" type="xsd:boolean" use="optional"
                   default="false"/>
  </xsd:complexType>

  <xsd:complexType name="net_type">
    <xsd:choice minOccurs="0" maxOccurs="unbounded">
      <xsd:element name="include-properties" type="properties_include_type"/>
      <xsd:element name="include-structs" type="struct_include_type"/>
      <xsd:element name="include-template" type="function_include_type"/>
      <xsd:element name="place" type="place_type"/>
      <xsd:element name="properties" type="property_map_type"/>
      <xsd:element name="specialize" type="template_use_type"/>
      <xsd:element name="struct" type="struct_type"/>
      <xsd:element name="template" type="template_type"/>
      <xsd:element name="transition" type="transition_type"/>
    </xsd:choice>
  </xsd:complexType>
</xsd:schema>
