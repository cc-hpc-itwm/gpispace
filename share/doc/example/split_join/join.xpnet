<!-- Copyright (C) 2023 Fraunhofer ITWM        -->
<!-- SPDX-License-Identifier: GPL-3.0-or-later -->

<defun name="join">
  <tunnel name="N" type="long" place="N"/>
  <in name="o" type="long" place="o"/>
  <out name="O" type="long" place="O"/>

  <net>
    <struct name="state_t">
      <field name="wait" type="long"/>
      <field name="sum" type="long"/>
    </struct>

    <place name="N" type="long" virtual="true"/>
    <place name="o" type="long"/>
    <place name="O" type="long"/>
    <place name="state" type="state_t"/>

    <transition name="init">
      <defun>
        <in name="N" type="long"/>
        <out name="state" type="state_t"/>
        <expression>
          ${state.wait} := ${N};
          ${state.sum} := 0L
        </expression>
      </defun>
      <connect-in port="N" place="N"/>
      <connect-out port="state" place="state"/>
    </transition>

    <transition name="join">
      <defun>
        <in name="state" type="state_t"/>
        <out name="state" type="state_t"/>
        <in name="o" type="long"/>
        <expression>
          ${state.sum} := ${state.sum} + ${o};
          ${state.wait} := ${state.wait} - 1L;
        </expression>
        <condition>${state.wait} :gt: 0L</condition>
      </defun>
      <connect-in port="state" place="state"/>
      <connect-out port="state" place="state"/>
      <connect-in port="o" place="o"/>
    </transition>

    <transition name="break">
      <defun>
        <in name="state" type="state_t"/>
        <out name="O" type="long"/>
        <expression>
          ${O} := ${state.sum}
        </expression>
        <condition>${state.wait} :eq: 0L</condition>
      </defun>
      <connect-in port="state" place="state"/>
      <connect-out port="O" place="O"/>
    </transition>
  </net>
</defun>
