%{
  //
  // Copyright (c) 2008 Fraunhofer ITWM
  // Mathias Dalheimer <dalheimer@itmw.fhg.de>
  //
  // Finite state machine of the GenLM protocol
  //

%}


%package sdpa::example
%class SdpaExampleFSMHandler
%header SdpaExampleFSMHandler.hpp

%start SdpaExampleFSM::Listening
%map SdpaExampleFSM

%%
Listening {

  LicenseRequest(msg: const gl::messages::LicenseRequestEvent&)
    [ctxt.grantLicenseRequest(msg) == true]
    LicenseIssued {
      handleIssueLicense(msg);
    }

  LicenseRequest(msg: const gl::messages::LicenseRequestEvent&)
    [ctxt.grantLicenseRequest(msg) == false]
    LicenseNotIssued {
      handleLicenseNak(msg);
    }


}

LicenseNotIssued {

  ReceivedNak(msg: const gl::messages::ReceivedNakEvent&)
    Terminated {
      handleReceivedNak(msg);
    }

}

LicenseIssued {
  RequestKey(msg: const gl::messages::RequestKeyEvent&)
    KeyRequested {
      handleRequestKey(msg);
    }
}

KeyRequested {
  ReceivedKey(msg: const gl::messages::ReceivedKeyEvent&)
    Terminated {
      handleReceivedKey(msg);
    }
}


Terminated {
  Default()
    Terminated
    {}
}
%%
