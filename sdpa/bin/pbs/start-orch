#!/bin/bash
### avoid strange behaviour with temporary inconsistency
### on Panasas Filesystems:
###
###     the test -r was sucessful but the source didn't
###     source anything
###
###
bind_addr='0'
name="orchestrator"
kvs_url=
log_url=
daemonize=false
pidfile=
state_dir="$HOME/.sdpa/state"
logdir=
verbose=false

while getopts ":hvn:d:l:k:DP:L:s:" opt; do
    case $opt in
        n)
            name=$OPTARG
            ;;
        k)
            kvs_url=$OPTARG
            ;;
        l)
            log_url=$OPTARG
            ;;
        D)
            daemonize=true
            ;;
        P)
            pidfile=$OPTARG
            ;;
        L)
            logdir=$OPTARG
            ;;
        s)
            state_dir=$OPTARG
            ;;
        v)
            verbose=true
            ;;
        h)
            echo "usage: $0 [-h] [-v] [-g] [-l interface] [-n name]" >&2
            echo "    -h : print this help" >&2
            echo "    -v : be verbose" >&2
            echo "    -n : name (default: $name)" >&2
            echo "    -k : kvs url" >&2
            echo "    -l : log url" >&2
            echo "    -D : daemonize" >&2
            echo "    -P pidfile: write pid to this file and lock it" >&2
            echo "    -s dir: sdpa state dir to use" >&2
            exit 0
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
    esac
done

if [ -n "${log_url}" ]
then
    export FHGLOG_to_server="${log_url}"
fi

if [ -r "${state_dir}/sdpa.env" ] ; then
    source "${state_dir}/sdpa.env"
else
    echo >&2 "needs to be executed under SDPA"
    exit 4
fi

if [ -z "$logdir" ]
then
    logdir="${state_dir}/log"
fi

logprefix="${logdir}/${name}"

if [ -z "$kvs_url" ]
then
    echo >&2 "kvs url is required, please specify -k"
    exit 4
fi

if $verbose
then
    export FHGLOG_level=TRACE
else
    export FHGLOG_level=INFO
fi

log "Running $name on $(hostname)"

argv="$SDPA_HOME/bin/orchestrator -u $bind_addr -n ${name} -k ${kvs_url}"
if $daemonize ; then
    argv="$argv --daemonize"
fi
if [ -n "$pidfile" ] ; then
    argv="$argv --pidfile $pidfile"
fi
FHGLOG_to_file="${logprefix}.log" exec $argv >"${logprefix}.out" 2>"${logprefix}.err"
