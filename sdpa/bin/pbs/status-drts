#!/bin/bash
name=
long=false
short=false
identity=
name_prefix="drts-$(hostname -s)"

function usage ()
{
    cat >&2 <<EOF
usage: $(basename "$0") [options]

    -h: print this help
    -i ident (=$identiy): identity
    -n name (*): name of the drts to check
                 if empty a list of all currently
                 running drts will be printed, takes
                 precedence over ident
    -l: print the whole command of the drts
    -s: just print the pids
EOF
}

while getopts ":hi:n:ls" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        i)
            identity=$OPTARG
            ;;
        n)
            name=$OPTARG
            ;;
        l)
            long=true
            ;;
        s)
            short=true
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
    esac
done

function status ()
{
    local name="$1" ; shift
    local pids=
    pids=$(ps -C drts-kernel -o pid=)

    if [ -n "$name" ] ; then
        for p in $pids ; do
            drts_name=$(cat /proc/$p/cmdline | tr '\0' '\n' | grep -A1 -e '^-n$' | tail -n 1)
            if [ "$drts_name" = "$name" ] ; then
                echo "$p"
                return 0
            fi
        done
    fi

    if [ -z "$pids" ] ; then
        return 1
    else
        echo $pids
        return 0
    fi
}

if [ -z "$name" ] ; then
    if [ -n "$identity" ] ; then
        name="${name_prefix}-${identity}"
    fi
fi

pids=$(status $name)
if [ -n "$pids" ] ; then
    if [ -n "$name" ] ; then
        echo "ok"
        exit 0
    else
        for p in $pids ; do
            if $short ; then
                echo $p
            else
                cmd="$(ps -p $p -o cmd=)"
                if [ $long == false ] ; then
                    cmd=$(echo $cmd | sed -e 's/.*-s plugin.drts.name=\([^ ]\+\).*/\1/')
                fi
                echo "pid $p := $cmd"
            fi
        done
        exit 0
    fi
else
    exit 1
fi
