#!/bin/bash

function usage ()
{
    cat >&2 <<EOF
usage: $(basename "$0") [options]

    -h: print this help
    -i ident (=$identiy): identity
    -n: name prefix
    -p: pattern
    -T timeout (=$timeout): seconds to wait before SIGKILL
EOF
}

identity=
name_prefix=''
pattern=
timeout=3

while getopts ":hi:n:p:S:T:" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        i)
            identity=$OPTARG
            ;;
        n)
            name_prefix="$OPTARG"
            ;;
        p)
            pattern="$OPTARG"
            ;;
        T)
            timeout=$OPTARG
            ;;
        \?)
            echo "invalid option: -$OPTARG" >&2
            echo "try: $0 -h" >&2
            exit 1
            ;;
    esac
done

function term_drts ()
{
    local pid="$1" ; shift
    local name="$1"; shift

    alive=true
    if signal_drts TERM $pid "$name"
    then
        for ((i=0 ; i < $timeout ; ++i))
        do
            sleep 1
            if ! signal_drts 0 $pid "$name"
            then
                alive=false
                break
            fi
        done
    else
        alive=false
    fi

    if $alive
    then
        signal_drts KILL $pid "$name"
    fi
}

function signal_drts ()
{
    local sig="$1"; shift
    local pid="$1" ; shift
    local name="$1" ; shift

    kill -$sig "$pid" >/dev/null 2>&1
}

if [ -z "$pattern" ] ; then
    if [ -z "$name_prefix" ] ; then
        pattern=".*"
    else
        pattern="$name_prefix-$(hostname -s)"
    fi

    if [ -n "$identity" ] ; then
        pattern="$pattern-${identity}"
    else
        pattern="$pattern-[0-9]\+"
    fi
fi

still_running=$(ps -C agent -o uid=,pid= | grep -e "^\s\+$(id -u)" | awk '{print $2}')
for p in $still_running ; do
    name=$(cat /proc/$p/cmdline 2>/dev/null | tr '\0' '\n' | grep -A1 -e '^-n$' | tail -n 1)
    if [ -z "$name" ] ; then
        continue
    fi

    if echo "$name" | grep -q "^${pattern}$" ; then
        term_drts "$p" "$name"
    fi
done
wait
