#!/bin/bash
### avoid strange behaviour with temporary inconsistency
### on Panasas Filesystems:
###
###     the test -r was sucessful but the source didn't
###     source anything
###
###
gpi_exe=""
debug=false
mem_size=
gpi_port=
pidfile=
force=false
daemonize=false
kvs_host=
kvs_port=
log_host=
log_port=
verbose=false
socket_path=
state_dir=~/.sdpa/state

function usage ()
{
    cat >&2 <<EOF
usage: $0 [options]

    -h: print this help
    -x gpi-exe: gpi program to use
    -g run within debugger
    -m size: memory size
    -p port: GPI port
    -P pidfile: write pid to this file
    -f: force (always copy binary)
    -D: daemonize
    -k host: kvs host
    -K port: kvs port
    -l host: log host
    -L port: log port
    -v: verbose
    -s dir: state-dir
    -S socket path
EOF
}

while getopts ":hx:gm:p:P:fDk:K:l:L:vs:S:" opt; do
    case $opt in
        h)
            usage
            exit 0
            ;;
        x)
            gpi_exe=$OPTARG
            ;;
        g)
            debug=true
            ;;
        m)
            mem_size=$OPTARG
            ;;
        p)
            gpi_port=$OPTARG
            ;;
        P)
            pidfile=$OPTARG
            ;;
        f)
            force=true
            ;;
        D)
            daemonize=true
            ;;
        k)
            kvs_host=$OPTARG
            ;;
        K)
            kvs_port=$OPTARG
            ;;
        l)
            log_host=$OPTARG
            ;;
        L)
            log_port=$OPTARG
            ;;
        v)
            verbose=true
            ;;
        s)
            state_dir=$OPTARG
            ;;
        S)
            socket_path=$OPTARG
            ;;
        \?)
            echo "invalid option: -$OPTARG" >&2
            echo "try: $0 -h" >&2
            exit 1
            ;;
    esac
done

if [ -n "${log_host}" -a -n "${log_port}" ]
then
    export FHGLOG_to_server="${log_host}:${log_port}"
fi

test -e "$state_dir/sdpa.env" && source "$state_dir/sdpa.env"

if [ -z "$socket_path" ] ; then
    log "E: socket path is missing, please specify it with -S"
    exit 1
fi

log_file="${state_dir}/log/gpi-space.log"

if [ -x "$gpi_exe" ] ; then
    cmdline=
    if $debug ; then
        cmdline="gdb -ex run --args $cmdline"
    fi
    cmdline="$cmdline ${gpi_exe}"

    if $verbose ; then
        cmdline="$cmdline --log-level TRACE"
    fi
    if $daemonize && ! $debug ; then
        cmdline="$cmdline --daemonize"
    fi
    if test -n "$mem_size" ; then
        cmdline="$cmdline --gpi-mem $mem_size"
    fi
    if test -n "$pidfile" ; then
        cmdline="$cmdline --pidfile $pidfile"
    fi
    if test -n "$kvs_host" ; then
        cmdline="$cmdline --kvs-host $kvs_host"
    fi
    if test -n "$kvs_port" ; then
        cmdline="$cmdline --kvs-port $kvs_port"
    fi
    if test -n "$log_host" ; then
        cmdline="$cmdline --log-host $log_host"
    fi
    if test -n "$log_port" ; then
        cmdline="$cmdline --log-port $log_port"
    fi

    cmdline="$cmdline --socket $socket_path"

    if test -n "$log_file" ; then
        cmdline="$cmdline --log-file $log_file"
    fi
    if test -n "$gpi_port" ; then
        cmdline="$cmdline --gpi-port $gpi_port"
    fi

    log "executing $cmdline"
    exec ${cmdline}
else
    log "Sorry, ${gpi_exe} is not executable"
    exit 1
fi
