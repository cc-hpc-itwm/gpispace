#!/bin/bash
#
#  this file is supposed to be sourced:
#
#    . $(gspc --exec-path)/gspc-sh-setup
#

################################################################################
#                                                                              #
#                        Log functions                                         #
#                                                                              #
################################################################################

function gspc_is_verbose_enabled ()
{
    local level=1
    if [ -n "$1" ] ; then
        level="$1"
    fi

    if [ -n "$GSPC_VERBOSE" ]
    then
        if [ $GSPC_VERBOSE -ge $level ]
        then
            return 0
        fi
    fi
    return 1
}

function gspc_log_impl ()
{
    local level="$1"; shift
    local component="$1" ; shift

    level_id='T'
    color_on=""
    color_off='\033[0m'

    case "$level" in
        trace)
            level_id=T
            ;;
        debug)
            level_id=D
            ;;
        info)
            level_id=I
            ;;
        warn)
            level_id=W
            color_on='\033[0;35m'
            ;;
        error)
            level_id=E
            ;;
        *)
            ;;
    esac
    echo -e >&2 "${color_on}[${level_id}] ($component): $@${color_off}"
}

function gspc_log_trace ()
{
    if gspc_is_verbose_enabled 3 ; then
        gspc_log_impl trace "$@"
    fi
}

function gspc_log_debug ()
{
    if gspc_is_verbose_enabled 2 ; then
        gspc_log_impl debug "$@"
    fi
}

function gspc_log_info ()
{
    if gspc_is_verbose_enabled 1 ; then
        gspc_log_impl info "$@"
    fi
}

function gspc_log_warn ()
{
    gspc_log_impl warn "$@"
}

function gspc_log_error ()
{
    gspc_log_impl error "$@"
}

################################################################################
#                                                                              #
#                        Utility functions                                     #
#                                                                              #
################################################################################

function gspc_abspath ()
{
    case "${1:0:1}" in
        /)
            echo "$1"
            ;;
        *)
            echo $(readlink -m "$PWD/$1")
            ;;
    esac
}

function gspc_call_editor ()
{
    local editor=( $(gspc config --get gspc.editor) )
    if [ $? -ne 0 ] ; then
        editor=( "${EDITOR:=/usr/bin/vi}" )
    fi
    "${editor[@]}" "$@"
}

function gspc_prepend_path ()
{
    local var="$1"; shift
    local val=$(eval echo \$${var})
    for v ; do
        val=$(echo "$val" | sed "s,:$v:,:,g")
        val=$(echo "$val" | sed -e "s,^$v:,,g")
        val=$(echo "$val" | sed -e "s,:$v\$,,g")
        val="$v:$val"
    done
    eval "$var=$val"
}
