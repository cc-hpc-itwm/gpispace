#!/bin/bash

mydir=$(dirname $(which "$0"))

prefix_path=$(readlink -f "${mydir}/../")
exec_path="${prefix_path}/libexec/gspc/scripts"
etc_path="${prefix_path}/etc"
bin_path="${prefix_path}/bin"
lib_path="${prefix_path}/lib"
plugin_path="${prefix_path}/libexec/fhg/plugins"

verbose=0
resolve_alias=true

. "${exec_path}/gspc-sh-version"
if [ $? -ne 0 ] ; then
    echo >&2 "Installation incomplete, please contact the admin!"
    exit 70
fi

. "${exec_path}/gspc-sh-setup"
if [ $? -ne 0 ] ; then
    echo >&2 "Installation incomplete, please contact the admin!"
    exit 70
fi

function usage()
{
    gspc help 2>&1
}

while true ; do
    case "$1" in
        --help) usage; exit ${GSPC_EX_OK} ;;
        --gspc-dir)
            if [ -z "$GSPC_DIR" ] ; then
                exit ${GSPC_EX_UNAVAILABLE}
            else
                echo "$GSPC_DIR"
                exit ${GSPC_EX_OK}
            fi
            shift
            ;;
        --gspc-dir=*)
            GSPC_DIR="${1:11}"
            shift
            ;;
        --exec-path)
            if [ -z "$exec_path" ] ; then
                echo >&2 "could not deduce exec-path"
                exit ${GSPC_EX_UNAVAILABLE}
            fi
            echo "$exec_path"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --etc-path)
            if [ -z "${etc_path}" ] ; then
                echo >&2 "could not deduce etc-path"
                exit ${GSPC_EX_UNAVAILABLE}
            fi
            echo "$etc_path"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --bin-path)
            if [ -z "${bin_path}" ] ; then
                echo >&2 "could not deduce bin-path"
                exit ${GSPC_EX_UNAVAILABLE}
            fi
            echo "$bin_path"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --lib-path)
            if [ -z "${lib_path}" ] ; then
                echo >&2 "could not deduce lib-path"
                exit ${GSPC_EX_UNAVAILABLE}
            fi
            echo "$lib_path"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --plugin-path)
            if [ -z "${plugin_path}" ] ; then
                echo >&2 "could not deduce plugin-path"
                exit ${GSPC_EX_UNAVAILABLE}
            fi
            echo "$plugin_path"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --version)
            echo "GPI-Space ${GSPC_INFO_VERSION}"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --dumpversion)
            echo "${GSPC_INFO_VERSION}"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --revision)
            echo "${GSPC_INFO_REVISION}"
            shift
            exit ${GSPC_EX_OK}
            ;;
        --no-alias)
            resolve_alias=false
            shift
            ;;
        --verbose) verbose=$((verbose + 1)); shift ;;
        -[a-z]*)
            flags="${1:1}"
            while [ -n "$flags" ] ; do
                flag="${flags:0:1}"
                flags="${flags:1}"
                case "$flag" in
                    v) verbose=$((verbose+1)) ;;
                    h) usage ; exit ${GSPC_EX_OK} ;;
                    *)
                        echo >&2 "gspc: invalid flag: $flag"
                        exit ${GSPC_EX_USAGE}
                        ;;
                esac
            done
            shift
            ;;
        --) shift; break ;;
        -*)
            echo >&2 "gspc: invalid option: $1"
            exit ${GSPC_EX_USAGE}
            ;;
        *) break ;;
    esac
done

if [ -z "$1" ] ; then
    usage
    exit ${GSPC_EX_USAGE}
fi

if [ -n "$GSPC_DIR" ] ; then
    GSPC_DIR=$(gspc_abspath "$GSPC_DIR")
    export GSPC_DIR
fi
gspc_prepend_path PATH "${mydir}"

cmd_name="$1"; shift

if $resolve_alias ; then
    cmd=( $("${exec_path}/gspc-config" --get "alias.${cmd_name}") )
    if [ $? -eq 0 ] ; then
        cmd_name="${cmd[0]}"
    fi
else
    cmd=()
fi

cmd[0]=$(gspc_resolve_command "${cmd_name}")

if [ -x "${cmd[0]}" ] ; then
    GSPC_VERBOSE="${verbose}" "${cmd[@]}" "$@"
else
    echo >&2 "gspc: '$cmd_name' is not a GPI-Space command. See 'gspc help'."
fi
