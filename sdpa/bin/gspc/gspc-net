#!/bin/bash

GSPC_API_COMMAND_SHORT_DESCRIPTION="manage the GSPCnet infrastructure"
GSPC_API_COMMAND_LEVEL=1

. $(gspc --exec-path)/gspc-sh-setup

GSPC_COOKIE_FILE="${HOME}/.gspc.cookie"

function usage()
{
    cat <<EOF
usage: net [-h|--help] [options] [--] [<action>]

Options:

   --get-cookie          shows the current cookie
   --set-cookie <cookie> sets the cookie

Actions:

$(gspc --no-alias list-commands --prefix=net --indent=4 --level=$((GSPC_API_COMMAND_LEVEL+1)))
    init        initialize the gspc-net infrastructure
EOF
}

function set_cookie()
{
    local cookie="$1" ; shift
    if [ -z "$cookie" ] ; then
        for ((i=0 ; i < 16 ; ++i))
        do
            cookie+=$(printf "%02x" $((${RANDOM} % 256)))
        done
    fi
    echo "${cookie}" > "${GSPC_COOKIE_FILE}" && chmod 0600 "${GSPC_COOKIE_FILE}"
}

opts=()
while true ; do
    case "$1" in
        -h|--help) usage ; exit ${GSPC_EX_OK} ;;
        --get-cookie)
            cat "${GSPC_COOKIE_FILE}"
            exit $?
            ;;
        --set-cookie)
            set_cookie "$2"
            exit $?
            ;;
        --) shift; break ;;
        *) break ;;
    esac
done

action="$1"

if [ -z "$action" ] ; then
    usage
    exit ${GSPC_EX_USAGE}
else
    shift
fi

if [ "$action" = "init" ]
then
    if [ ! -e "${GSPC_COOKIE_FILE}" ]
    then
        set_cookie || {
            gspc_log_error net "could not set cookie"
            exit ${GSPC_EX_CANTCREAT}
        }
    fi

    exit ${GSPC_EX_OK}
fi

cmd=$(gspc_resolve_command "net-${action}")

if [ ! -x "${cmd}" ] ; then
    gspc_log_error net "no such action: $action"
    exit ${GSPC_EX_USAGE}
else
    "${cmd}" "${opts[@]}" "$@"
fi
