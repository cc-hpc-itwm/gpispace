#!/bin/bash

GSPC_API_COMMAND_SHORT_DESCRIPTION="manage the remote interface"
GSPC_API_COMMAND_LEVEL=1

. $(gspc --exec-path)/gspc-sh-setup

RIF_DEFAULT_PORT=5000
rif_port="$(gspc config --get rif.port)"
if [ -z "$rif_port" ] ; then
    rif_port="${RIF_DEFAULT_PORT}"
fi
RIF_DEFAULT_FANOUT=64
rif_fanout=${RIF_DEFAULT_FANOUT}

function usage()
{
    cat <<EOF
usage: rif [-h|--help] [options] [--] [<action>]

Options:

   --rif-port <port>     specify the port of the RIF (${rif_port})
   --default-port        print the default port

   -F|--file file        use nodes from file
   -N|--node node        use this node

   --fanout N            how many parallel tasks (${rif_fanout})
   --sync                synonym for --fanout 1

Actions:

$(gspc --no-alias list-commands --prefix=rif --indent=4 --level=$((GSPC_API_COMMAND_LEVEL+1)))

    everything else will handed as is to 'raw'
EOF
}

opts=()
while true ; do
    case "$1" in
        -h|--help) usage ; exit ${GSPC_EX_OK} ;;
        --rif-port)
            rif_port="$2"
            shift ; shift
            ;;
        --default-port)
            echo "${RIF_DEFAULT_PORT}"
            exit ${GSPC_EX_OK}
            ;;
        -F|--file)
            opts+=("$1" "$2")
            shift; shift
            ;;
        -N|--node)
            opts+=("$1" "$2")
            shift; shift
            ;;
        --sync)
            rif_fanout=1
            shift;
            ;;
        --fanout)
            rif_fanout="$2"
            shift; shift
            ;;
        --) shift; break ;;
        *) break ;;
    esac
done

action="$1"

if [ -z "$action" ] ; then
    usage
    exit ${GSPC_EX_USAGE}
else
    shift
fi

opts+=(--rif-port "$rif_port")
opts+=(--fanout   "$rif_fanout")

cmd=$(gspc_resolve_command "rif-${action}")

if [ ! -x "${cmd}" ] ; then
    "$(gspc --exec-path)/gspc-rif-raw" "${opts[@]}" "${action}" "${@}"
else
    "${cmd}" "${opts[@]}" "$@"
fi
