# bernd.loerwald@itwm.fraunhofer.de

TIMEOUT_AFTER_WHICH_SELFTEST_SHOULD_BE_DONE=5

source "@CMAKE_BINARY_DIR@/test/env.sh"
source "@CMAKE_BINARY_DIR@/test/measured.sh"
source "@CMAKE_BINARY_DIR@/test/die.sh"
source "@CMAKE_BINARY_DIR@/test/dir_build.sh"
source "@CMAKE_BINARY_DIR@/test/dir_state.sh"

DIR_TEST="@CMAKE_CURRENT_SOURCE_DIR@"

OUT="${DIR_BUILD}/selftest.out"
HOSTFILE="${DIR_BUILD}/hostfile"

make+=( make -f "${SDPA_HOME}/share/sdpa/make/common.mk" )
make+=( MAIN=selftest )
make+=( XML=selftest.xml )
make+=( PUT_PORT=\'challenge=\"$$\"\' )
make+=( BUILDDIR="${DIR_BUILD}" )
make+=( LIB_DESTDIR="${DIR_BUILD}" )
make+=( -C "$SDPA_HOME/libexec/sdpa/apps/selftest/" )

cleanup()
{
  sdpa -s "${DIR_STATE}" stop
  rm -f "${HOSTFILE}"
  eval ${make[@]} uninstall
  eval ${make[@]} clean
  cleanup_dir_build
  cleanup_dir_state
}

trap 'cleanup' EXIT

measured "build-wrapper" ${make[@]} lib                     || die $EX_ERR_RUN
measured "install" ${make[@]} install                       || die $EX_ERR_RUN

hostname > "${HOSTFILE}"                                    || die $EX_ERR_ENV

measured "boot" sdpa boot -S "${DIR_STATE}" -A "${DIR_BUILD}" -M -f "${HOSTFILE}" work:1        \
                                                            || die $EX_ERR_BOOT

timeout ${TIMEOUT_AFTER_WHICH_SELFTEST_SHOULD_BE_DONE} \
  ${make[@]} SDPA_STATE_DIR="${DIR_STATE}" submit           || die $EX_ERR_RUN

test "$(pnetget -i "${OUT}" -p response)" = "\"sdpa.response.$$\""           \
                                                            || die $EX_ERR_RES

timeout ${TIMEOUT_AFTER_WHICH_SELFTEST_SHOULD_BE_DONE} \
  ${make[@]} SDPA_STATE_DIR="${DIR_STATE}" submit           || die $EX_ERR_RUN

test "$(pnetget -i "${OUT}" -p response)" = "\"sdpa.response.$$\""           \
                                                            || die $EX_ERR_RES

measured "stop" sdpa -s "${DIR_STATE}" stop                 || die $EX_ERR_STOP

rm -f "${HOSTFILE}"                                      || die $EX_ERR_CLEANUP
measured "uninstall" ${make[@]} uninstall                || die $EX_ERR_CLEANUP
measured "clean" ${make[@]} clean                        || die $EX_ERR_CLEANUP
cleanup_dir_build                                        || die $EX_ERR_CLEANUP

trap - EXIT
