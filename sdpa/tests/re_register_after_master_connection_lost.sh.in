# bernd.loerwald@itwm.fraunhofer.de

set -euo pipefail

export PATH="@CMAKE_INSTALL_PREFIX@/bin":$PATH

DIR_TEST="@CMAKE_CURRENT_BINARY_DIR@"

DUMMY_NET="$(mktemp -p "${DIR_TEST}" empty_dummy_network.pnet.XXXXX)"

ORCHESTRATOR_1_PID=
AGENT_PID=
ORCHESTRATOR_2_PID=

# TODO: needs some policy or fixes to work without
TIMEOUT_UNTIL_A_REGISTRATION_SHOULD_BE_LOST=2
TIMEOUT_UNTIL_A_REREGISTRATION_SHOULD_BE_DONE=5
TIMEOUT_UNTIL_A_STARTED_ORCHESTRATOR_SHOULD_LISTEN=1

cleanup()
{
  set +e
  [[ -n "${ORCHESTRATOR_2_PID}" ]] && kill ${ORCHESTRATOR_2_PID}
  [[ -n "${AGENT_PID}" ]] && kill ${AGENT_PID}
  [[ -n "${ORCHESTRATOR_1_PID}" ]] && kill ${ORCHESTRATOR_1_PID}
  rm -f "${DUMMY_NET}"
}

trap 'cleanup' EXIT

echo "<defun/>" | pnetc > "${DUMMY_NET}"

orchestrator_1_startup_messages_raw=$(start-and-fork \
  --end-sentinel-value OKAY \
  --startup-messages-pipe-option --startup-messages-pipe \
  --command "$(which orchestrator)" \
  --arguments --name "orchestrator"

old_IFS=${IFS}
IFS=$'\n'
orchestrator_1_startup_messages=(${orchestrator_1_startup_messages_raw})
IFS=${old_IFS}

ORCHESTRATOR_1_PID=${orchestrator_1_startup_messages[0]}

agent_startup_messages_raw=$(start-and-fork \
  --end-sentinel-value OKAY \
  --startup-messages-pipe-option --startup-messages-pipe \
  --command "$(which agent)" \
  --arguments --name "agent" \
  --arguments --master "orchestrator%${orchestrator_1_startup_messages[1]}%${orchestrator_1_startup_messages[2]}"

old_IFS=${IFS}
IFS=$'\n'
agent_startup_messages=(${agent_startup_messages_raw})
IFS=${old_IFS}

AGENT_PID=${agent_startup_messages[0]}

kill ${ORCHESTRATOR_1_PID}
ORCHESTRATOR_1_PID=

sleep ${TIMEOUT_UNTIL_A_REGISTRATION_SHOULD_BE_LOST}

orchestrator_2_startup_messages_raw=$(start-and-fork \
  --end-sentinel-value OKAY \
  --startup-messages-pipe-option --startup-messages-pipe \
  --command "$(which orchestrator)" \
  --arguments --name "orchestrator" \
  --arguments --url "localhost:${orchestrator_1_startup_messages[2]}"

old_IFS=${IFS}
IFS=$'\n'
orchestrator_2_startup_messages=(${orchestrator_2_startup_messages_raw})
IFS=${old_IFS}

ORCHESTRATOR_2_PID=${orchestrator_2_startup_messages[0]}

sleep ${TIMEOUT_UNTIL_A_STARTED_ORCHESTRATOR_SHOULD_LISTEN}

JOB_ID=$(sdpac --orchestrator-host ${orchestrator_2_startup_messages[1]} \
               --orchestrator-port ${orchestrator_2_startup_messages[2]} \
               submit "${DUMMY_NET}")
timeout ${TIMEOUT_UNTIL_A_REREGISTRATION_SHOULD_BE_DONE}        \
  sdpac --orchestrator-host ${orchestrator_2_startup_messages[1]} \
        --orchestrator-port ${orchestrator_2_startup_messages[2]} \
        wait "${JOB_ID}"
JOB_STATUS=$(sdpac --orchestrator-host ${orchestrator_2_startup_messages[1]} \
                   --orchestrator-port ${orchestrator_2_startup_messages[2]} \
                   status "${JOB_ID}")

[[ "x${JOB_STATUS}" = "xSDPA::Finished" ]]
