#!/bin/bash

function prepend_path ()
{
    local var="$1"; shift
    local val=$(eval echo \$${var})
    for v ; do
	val=$(echo "$val" | sed "s,:$v:,:,g")
	val=$(echo "$val" | sed -e "s,^$v:,,g")
	val=$(echo "$val" | sed -e "s,:$v\$,,g")
	val="$v:$val"
    done
    eval "$var=$val"
}

prefix=
default_prefix="@CMAKE_INSTALL_PREFIX@"
version="@PROJECT_REVISION@"

if [ -n "$SDPA_HOME" ] ; then
    prefix="$SDPA_HOME"
else
    if [ -r "$HOME/.sdpa/home" ] ; then
	prefix=$(cat "$HOME/.sdpa/home")
    else
	prefix="${default_prefix}"
    fi
fi

if [ -z "$prefix" -o ! -d "$prefix" ] ; then
    echo "cannot access \`$prefix': no such directory" >&2
    echo "please export SDPA_HOME or write the path to $HOME/.sdpa/home" >&2
else
    if [ -z "$SDPA_LOADED" -o -n "$FORCE_LOAD_SDPA" ]; then
	if [ -n "$FORCE_LOAD_SDPA" ]
	then
	    echo "forcing load of sdpa.env" >&2
	fi

	export SDPA_HOME="$prefix"
	export SDPA_LIBEXEC="$prefix/libexec/sdpa"
	export SDPA_PLUGINS="$prefix/libexec/fhg/plugins"
	export SDPA_VERSION="$version"

	prepend_path PATH "${SDPA_HOME}/bin"
	prepend_path LD_LIBRARY_PATH "${prefix}/lib:${SDPA_LIBEXEC}"

	export PATH LD_LIBRARY_PATH

	export SDPA_LOADED=true
    fi
fi

unset prefix
unset default_prefix
unset version
